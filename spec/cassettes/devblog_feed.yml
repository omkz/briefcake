---
http_interactions:
- request:
    method: get
    uri: http://devblog.avdi.org/feed/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Ruby
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Date:
      - Sun, 21 Feb 2021 19:18:10 GMT
      Server:
      - Apache
      Location:
      - http://virtuouscode.com/feed/
      Content-Length:
      - '237'
      Content-Type:
      - text/html; charset=iso-8859-1
    body:
      encoding: UTF-8
      string: |
        <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
        <html><head>
        <title>301 Moved Permanently</title>
        </head><body>
        <h1>Moved Permanently</h1>
        <p>The document has moved <a href="http://virtuouscode.com/feed/">here</a>.</p>
        </body></html>
  recorded_at: Sun, 21 Feb 2021 19:18:10 GMT
- request:
    method: get
    uri: http://virtuouscode.com/feed/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Ruby
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Date:
      - Sun, 21 Feb 2021 19:18:10 GMT
      Server:
      - Apache
      Location:
      - https://avdi.codes/feed/
      Cache-Control:
      - max-age=600
      Expires:
      - Sun, 21 Feb 2021 19:28:10 GMT
      Content-Length:
      - '232'
      Content-Type:
      - text/html; charset=iso-8859-1
    body:
      encoding: UTF-8
      string: |
        <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
        <html><head>
        <title>301 Moved Permanently</title>
        </head><body>
        <h1>Moved Permanently</h1>
        <p>The document has moved <a href="https://avdi.codes/feed/">here</a>.</p>
        </body></html>
  recorded_at: Sun, 21 Feb 2021 19:18:10 GMT
- request:
    method: get
    uri: https://avdi.codes/feed/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Ruby
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - openresty
      Date:
      - Sun, 21 Feb 2021 19:18:12 GMT
      Content-Type:
      - application/rss+xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Link:
      - <https://avdi.codes/wp-json/>; rel="https://api.w.org/"
      Last-Modified:
      - Sun, 07 Feb 2021 17:25:37 GMT
      Etag:
      - '"5eb52a75a93fe82a15d245b9c5426c64"'
      Cache-Control:
      - max-age=172800
      Expires:
      - Tue, 23 Feb 2021 19:18:11 GMT
      Vary:
      - User-Agent
      X-Varnish:
      - MISS
      Age:
      - Sun, 21 Feb 2021 19:18:11 GMT
      X-Hosted-By:
      - DreamPress
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 21 Feb 2021 19:18:12 GMT
recorded_with: VCR 6.0.0
