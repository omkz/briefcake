---
http_interactions:
- request:
    method: get
    uri: https://www.johnnunemaker.com/rss/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Ruby
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '61597'
      Server:
      - openresty
      Content-Type:
      - text/xml; charset=utf-8
      Status:
      - 200 OK
      X-Request-Id:
      - 365e7174c89c40c3a4f3733615db9695
      - 517648095be8c780bf9b298332c055db
      Etag:
      - W/"30a1e-0JTvOazm7tOYGSgGSGuqEOqJQWQ"
      Ghost-Cache:
      - HIT
      Cache-Control:
      - public, max-age=0
      Ghost-Age:
      - '640582'
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 18 Aug 2021 15:34:50 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      X-Served-By:
      - cache-ams21072-AMS
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1629300890.493315,VS0,VE3
      Vary:
      - Accept-Encoding
      Ghost-Fastly:
      - 'true'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title><![CDATA[John Nunemaker]]></title><description><![CDATA[When not playing basketball, I work as a programmer/owner at Box Out Sports and Fewer & Faster. I write mostly about Ruby and Rails. You should definitely subscribe. It's legit. And free.]]></description><link>https://www.johnnunemaker.com/</link><image><url>https://www.johnnunemaker.com/favicon.png</url><title>John Nunemaker</title><link>https://www.johnnunemaker.com/</link></image><generator>Ghost 4.11</generator><lastBuildDate>Wed, 11 Aug 2021 05:38:28 GMT</lastBuildDate><atom:link href="https://www.johnnunemaker.com/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Feature Flags: Not Just for Big Teams or Big Features]]></title><description><![CDATA[The query, cache, code, feature flag, graph and point: control your code, even the tiny bits.]]></description><link>https://www.johnnunemaker.com/feature-flags-for-tiny-bits/</link><guid isPermaLink="false">60cb859a9dff9d003ed36cc8</guid><category><![CDATA[flipper]]></category><category><![CDATA[performance]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Mon, 21 Jun 2021 15:48:52 GMT</pubDate><content:encoded><![CDATA[<p>As you may recall, I recently <a href="https://www.johnnunemaker.com/speakerdeck/">sold SpeakerDeck</a>. The buyer is a friend so I&apos;m still happy to help when I can. Recently, there was a performance problem that popped up. So I jumped in to fix it as any <strong>nerd-sniped</strong> programmer would.</p><p>As you might expect (if you thought about it), the most popular Rails route (by far) in <a href="https://speakerdeck.com">Speaker Deck</a> is viewing a talk. When viewing a talk, Speaker Deck also shows related talks. </p><p>First, related talks from the owner of the talk being viewed are shown. Then, if the talk is categorized, there is a random smattering of recent talks in the same category.</p><p>There be the dragons. &#x1F409; </p><h2 id="the-query">The Query </h2><p>The related talks for a category query looked something like this (<em>hint: its not real pretty</em>):</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">Talk.published.sorted.for_category(talk.category).
  where(&apos;talks.owner_id &lt;&gt; ?&apos;, talk.owner_id).
  where(&apos;talks.id &lt;&gt; ?&apos;, talk.id).
  where(&quot;views_count &gt; ?&quot;, ENV.fetch(&quot;RELATED_CATEGORY_VIEWS_MINIMUM&quot;, 100).to_i).
  limit(ENV.fetch(&quot;RELATED_CATEGORY_LIMIT&quot;, 100).to_i).
  load.
  shuffle.
  first(ENV.fetch(&quot;RELATED_CATEGORY_COUNT&quot;, 12).to_i)
</code></pre>
<!--kg-card-end: markdown--><p>The <code>ENV</code> vars are just to make it easier to tweak without changing the code. It&apos;s easier to change an <code>ENV</code> var than make a branch, deploy, etc.</p><h3 id="in-english">In English</h3><p>The query is doing this:</p><ul><li>filter out private/deleted/etc talks (<code>published</code>)</li><li>order by recent (<code>sorted</code>)</li><li>filter to talks in the same category as the talk being viewed (<code>for_category</code>)</li><li>filter out the talk being viewed (because they&apos;re already looking at it)</li><li>filter out any talks by the same owner as the talk being viewed (since those are probably already shown)</li><li>filter out any talks with fewer than 100-ish views</li><li>only pull 100 across the wire (<code>limit</code>, this is enough to show variety without making it slow by pulling too much data)</li><li>shuffle (so different decks show on each page load)</li><li>show up to 12</li></ul><p>I&apos;ve definitely seen worse queries. But over time this query has gotten slower (it&apos;s not a great example of <a href="https://www.johnnunemaker.com/anti-decay-programming/">anti-decay programming</a>). </p><p>The primary cause of slowness was the <code>view_count</code> filter. Prior to that addition, it was pretty snappy. But the <code>view_count</code> filter is valuable because it removes a lot of less valuable/interesting decks. </p><h2 id="the-cache">The Cache</h2><p>I could have just come up with a new database index to help speed it up. But it likely would have still ended up regressing over time. This (expensive to compute and rarely changes) is actually a great example of when to reach for caching. </p><p>This data changes a few times an hour. But there is absolutely no problem with it being a little stale. <strong>No one will notice or care</strong>.</p><h3 id="de-personalize">De-personalize</h3><p>The first step to caching it was to <strong>remove the personalization</strong> (e.g. customization based on talk being viewed and user viewing talk). </p><p>Whenever possible, I avoid caching based on the current user (and definitely the current user + another object like a talk), as that won&apos;t save me much utilization (cold cache for each new user). And it would <strong>dramatically increase the size</strong> of the cache (M * N where M is talk and N is user).</p><p>So first I moved the server side filters of &quot;not this talk&quot; or &quot;any talk by same owner&quot; to the client side. </p><p>Moving these from server side to client side meant that I could safely cache it <strong>once for all users</strong> instead of per talk or user or (even worse) talk + user (aka M * N). </p><h3 id="the-code">The Code</h3><p>The resulting Ruby code looked something like this:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class RelatedTalks &lt; Struct.new(:talk, :current_user)
  
  # [ snipped for brevity... ]

  def by_category
    @by_category ||= begin
      if talk.category
        by_category_cached.reject { |category_talk|
          category_talk.owner_id == talk.owner_id || category_talk.id == talk.id
        }.shuffle.first(related_category_count)
      else
        []
      end
    end
  end

  private

  def by_category_cached
    key = [
      &quot;related_talks_by_category&quot;,
      talk.category.slug,
      related_category_views_minimum,
      related_category_limit,
    ]

    Rails.cache.fetch(key.join(&quot;/&quot;), expires_in: 60.minutes) do
      by_category_fresh
    end
  end

  def by_category_fresh
    Talk.published.sorted.for_category(talk.category).
      where(&quot;views_count &gt; ?&quot;, related_category_views_minimum).
      limit(related_category_limit).
      load
  end

  def related_category_views_minimum
    ENV.fetch(&quot;RELATED_CATEGORY_VIEWS_MINIMUM&quot;, 100).to_i
  end

  def related_category_limit
    ENV.fetch(&quot;RELATED_CATEGORY_LIMIT&quot;, 100).to_i
  end

  def related_category_count
    ENV.fetch(&quot;RELATED_CATEGORY_COUNT&quot;, 12).to_i
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>I often split out cached and fresh methods. I&apos;m not sure when or where I started doing this. But it just feels <strong>easier to scan</strong> and <strong>allows for bypassing the cache</strong> by using the fresh method.</p><p>I certainly could have branch shipped this or gone a bit more cowboy and merged it into master and shipped it. But I <strong>HATE</strong> outages.</p><h2 id="the-feature-flag">The Feature Flag </h2><p> The most important thing to me is mean time to resolution (MTTR). </p><p>I want to (nearly) <strong>instantly rollback any changes</strong> instead of waiting minutes or longer for a rollback to happen. That&apos;s why I dropped a feature flag in. </p><h3 id="control-your-code">Control Your Code</h3><p>The change was minor. <strong>But the increase in control was substantial</strong>. </p><p>The only change below is an <code>if</code>/<code>else</code> <a href="https://www.flippercloud.io">flipper</a> check to see if caching is enabled or not.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class RelatedTalks &lt; Struct.new(:talk, :current_user)
  
  # [ snipped for brevity... ]

  def by_category
    @by_category ||= begin
      if talk.category
        category_talks = if Flipper.enabled?(:related_talks_by_category_caching, current_user)
          by_category_cached
        else
          by_category_fresh
        end

        category_talks.reject { |category_talk|
          category_talk.owner_id == talk.owner_id || category_talk.id == talk.id
        }.shuffle.first(related_category_count)
      else
        []
      end
    end
  end
  
  # [ snipped for brevity... ]
end
</code></pre>
<!--kg-card-end: markdown--><h3 id="safety-first">Safety First</h3><p>This tiny change meant that I could ship it to production with backwards compatibility. </p><p>I could deploy, enable the feature for me alone and <strong>ensure that it worked</strong> (you know, before shipping it to everyone and possibly causing an outage).</p><p>And that is exactly what I did. I enabled the feature for me and checked the <a href="https://github.com/MiniProfiler/rack-mini-profiler">rack mini profiler</a> output. Everything looked good. &#x1F4A5;</p><p>I clicked enable in <a href="https://www.flippercloud.io">Flipper Cloud</a> and <strong>instantly</strong> performance improved for the entire site. But don&apos;t trust me, trust my graphs.</p><h2 id="the-graph">The Graph</h2><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://www.johnnunemaker.com/content/images/2021/06/speakerdeck-cache-related-talks.png" class="kg-image" alt loading="lazy" width="939" height="761" srcset="https://www.johnnunemaker.com/content/images/size/w600/2021/06/speakerdeck-cache-related-talks.png 600w, https://www.johnnunemaker.com/content/images/2021/06/speakerdeck-cache-related-talks.png 939w" sizes="(min-width: 720px) 720px"><figcaption>Talks#show Performance Improvement</figcaption></figure><p>It&apos;s pretty obvious when the <a href="https://www.flippercloud.io">flipper</a> feature was enabled (even my mom can tell and she&apos;s not a programmer; Hi Mom! She&apos;s a subscriber and reads every post even when it&apos;s all gobbledygook to her like this one). The blue in the graph above goes to nothing. Zilch. Nada. </p><p>This is what I call a <strong>drop off graph</strong> (and it&apos;s one of the things I live for). </p><p>It&apos;s the kind of graph I store in a folder named &quot;<strong>Dexter</strong>&quot; because performance problems were <strong>killed &#x1FA78; </strong>and I want to remember it.</p><figure class="kg-card kg-embed-card"><blockquote class="twitter-tweet"><p lang="en" dir="ltr">&#x1FA78; I mean yes, I have a folder named &quot;Dexter&quot; where I collect &#x1F4C9; app perf improvements I&apos;ve helped with. <br><br>That&apos;s not weird. Everyone does, right? <br><br>And sometimes you too open the vent and &#x1F440; at them for a bit. You know, to remember the good days... <a href="https://t.co/HD1F3FRSPM">pic.twitter.com/HD1F3FRSPM</a></p>&#x2014; John Nunemaker (@jnunemaker) <a href="https://twitter.com/jnunemaker/status/1354123290902720512?ref_src=twsrc%5Etfw">January 26, 2021</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</figure><h2 id="the-point">The Point</h2><p>Again, just a reminder. In this instance, I&apos;m a team of one. I reviewed my own pull request. <strong>Feature flags aren&apos;t just for large teams</strong>. </p><p>Along the same lines, this wasn&apos;t a huge new feature. <strong>This was a tiny code change</strong> (&lt; 50ish lines of code). But it could have made (and <em>did</em> make) a large impact. </p><p>Putting changes like this behind a feature flag mean that I can control the blast radius if things go wrong and rollback instantly (button click verse re-deploying code for several minutes).</p><p>That&apos;s the point. <strong>Feature flags are control</strong>. And control is gives you confidence to move faster.</p>]]></content:encoded></item><item><title><![CDATA[Rails Feature Flags: Now So Flippin' Easy You Won't Believe It]]></title><description><![CDATA[Well friends today is a great day. I'm writing to let you know that Flipper 0.21 is hot off the press. And. It. Is. Awesome. Seriously, read on.]]></description><link>https://www.johnnunemaker.com/rails-feature-flags/</link><guid isPermaLink="false">60958c99c26583003ef0aa6e</guid><category><![CDATA[flipper]]></category><category><![CDATA[rails]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Mon, 10 May 2021 16:30:22 GMT</pubDate><media:content url="https://www.johnnunemaker.com/content/images/2021/05/flipper-cloud-021-2-1.png" medium="image"/><content:encoded><![CDATA[<img src="https://www.johnnunemaker.com/content/images/2021/05/flipper-cloud-021-2-1.png" alt="Rails Feature Flags: Now So Flippin&apos; Easy You Won&apos;t Believe It"><p>As I said in the title, getting started with feature flags in your Rails apps has <strong>never been easier</strong>. With the latest release of Flipper (0.21), the <em>golden path</em> is all handled by simply bundling the gems you need. </p><p>If this version had a name, it would probably be <strong>convention over configuration</strong>. I&apos;m going to take you through all the automatic &#x2728; now. So read on and enjoy.</p><h2 id="automatic-adapters">Automatic Adapters</h2><p>In previous versions of Flipper, you had several decisions to make to get started:</p><ul><li>Which adapter should I use? What even is an adapter? </li><li>Should I include memoization? How do I do that? </li><li>Should I preload all features, some features or no none? </li></ul><p>No more. After more than a decade of using feature flags and eight years since the inception of Flipper, we have opinions on a default setup. </p><p><strong>And this release makes all those choices for you. </strong></p><p>First, drop this in your <a href="https://bundler.io/v2.2/man/gemfile.5.html">Gemfile</a> and run <a href="https://bundler.io">bundle</a>:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">gem &quot;flipper&quot;
</code></pre>
<!--kg-card-end: markdown--><p>Now peel out. <strong>Yep, that&apos;s it</strong>. You are all setup and ready to sprinkle your code with power &#x2728;. <code>Flipper.enabled?</code> and friends will just work&#x2122;. </p><p>How you say? What is this dark ruby-licious magic? Wherever, whenever possible (like <a href="https://www.youtube.com/watch?v=weRHyjj34ZE">Shakira</a>), Flipper now tries to do all the configuration for you (<a href="https://github.com/jnunemaker/flipper/pull/502">#502</a>). </p><p>Now don&apos;t get too excited. That alone won&apos;t get you very far. </p><p>But it will automatically set you up with the memory adapter so you can kick the tires and get a feel for Flipper.</p><h3 id="choose-your-own-adventure">Choose Your Own Adventure </h3><p>To get real work done, you have to pick from our vast array of <a href="https://github.com/jnunemaker/flipper/blob/a82aa8d93c43725a98219ad3b61160ebf65e9cc4/docs/Adapters.md#officially-supported">adapters</a> or <a href="https://github.com/jnunemaker/flipper/blob/a82aa8d93c43725a98219ad3b61160ebf65e9cc4/docs/Adapters.md#roll-your-own">roll your own</a>. And that is where it starts to get hard, right? Wrong. </p><p><strong>Oooooh</strong> <strong>hashtag burn</strong>. See how I set you up there. Sorry, I&apos;ll stop slinging the hash tags and just show you. </p><p>Let&apos;s say you pick <a href="https://redis.io">redis</a> to store your feature flag data:</p><!--kg-card-begin: markdown--><pre><code>gem &quot;flipper-redis&quot;
</code></pre>
<!--kg-card-end: markdown--><p>With that tiny addition (literally <code>-redis</code>) and another <code>bundle</code>, you are ready to rock and roll feature flags all the way to production. </p><p>It&apos;s the same story for many of our other supported adapters.</p><!--kg-card-begin: markdown--><h3 id="active-record">Active Record</h3>
<pre><code>gem &quot;flipper-active_record
# create migration and migrate
$ rails g flipper:active_record &amp;&amp; rails db:migrate
</code></pre>
<h3 id="sequel">Sequel</h3>
<pre><code>gem &apos;flipper-sequel&apos;
irb&gt; require &apos;generators/flipper/templates/sequel_migration&apos;
irb&gt; CreateFlipperTablesSequel.new(Sequel::Model.db).up
</code></pre>
<h3 id="mongo">Mongo</h3>
<pre><code># set MONGO_URL
gem &apos;flipper-mongo&apos;
</code></pre>
<!--kg-card-end: markdown--><p>Need other storage? Check out the full list of <a href="https://github.com/jnunemaker/flipper/blob/a82aa8d93c43725a98219ad3b61160ebf65e9cc4/docs/Adapters.md#officially-supported">adapters</a> or <a href="https://github.com/jnunemaker/flipper/blob/a82aa8d93c43725a98219ad3b61160ebf65e9cc4/docs/Adapters.md#roll-your-own">roll your own</a>.</p><h2 id="automatic-memoization-preloading">Automatic Memoization &amp; Preloading</h2><p>The great thing is we didn&apos;t <em>only</em> configure clients and connections for you. If you&apos;re using Rails, we&apos;ll now set you up with everything else you need for performant feature flags. </p><p>Flipper has long included memoization of feature data per request and preloading of that data (if you so desire). But to use either you had to add the <a href="https://github.com/jnunemaker/flipper/blob/a82aa8d93c43725a98219ad3b61160ebf65e9cc4/lib/flipper/middleware/memoizer.rb">memoizer middleware</a> and configure it correctly. </p><p>Now, Flipper comes standard with a <a href="https://github.com/jnunemaker/flipper/blob/a82aa8d93c43725a98219ad3b61160ebf65e9cc4/lib/flipper/railtie.rb">railtie</a> that automatically turns on memoization and preloading. One less middleware to think about post-install. And a whole lot fewer network calls <strong>by default &#x1F4C9;</strong>. </p><p>The important thing about defaults is making them easy to change. So we did that too. </p><h3 id="tweaking-memoization">Tweaking Memoization</h3><p>If you know what you are doing, you can disable memoization entirely:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">Rails.application.configure do
  config.flipper.memoize = false
end
</code></pre>
<!--kg-card-end: markdown--><p>Or, just disable it for particular requests:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">Rails.application.configure do
  config.flipper.memoize = -&gt;(request) { 
    !request.path.start_with?(&quot;/assets&quot;) 
  }
end
</code></pre>
<!--kg-card-end: markdown--><h3 id="tweaking-preloading">Tweaking Preloading</h3><p>You can preload only particular features (say the ones used on most requests):</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">Rails.application.configure do
  config.flipper.preload = [:stats, :search, :some_feature]
end
</code></pre>
<!--kg-card-end: markdown--><p>Or, you can disabling preloading entirely:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">Rails.application.configure do
  config.flipper.preload = false
end
</code></pre>
<!--kg-card-end: markdown--><p>Again, all you&apos;ve done is include one gem. And now you have feature flags that do only one network call on each request. No effort for you. </p><h2 id="automatic-flipperid">Automatic flipper_id</h2><p>One of the minor annoyances has always been remembering to define <code>flipper_id</code> on any object that you&apos;d like to enable or disable an actor for. </p><p>For this, Flipper now ships with <code>Flipper::Identifier</code> (<a href="https://github.com/jnunemaker/flipper/blob/12895efd3f85dc34a244eddea6793da1f0d35e42/lib/flipper/identifier.rb">source</a>). Include this module in any object and you get a sweet default implementation of <code>flipper_id</code>.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class User
  include Flipper::Identifier
  
  attr_reader :id
  
  def initialize(id)
    @id = id
  end
end

User.new(1).flipper_id # =&gt; &quot;User;1&quot;
</code></pre>
<!--kg-card-end: markdown--><p>We also automatically include <code>Flipper::Identifier</code> for any Active Record or Sequel models (<a href="https://github.com/jnunemaker/flipper/pull/505">#505</a>).</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">irb(main)&gt; Feature.new(id: 1).flipper_id
=&gt; &quot;Feature;1&quot;
irb(main)&gt; Project.new(id: 1).flipper_id
=&gt; &quot;Project;1&quot;
irb(main)&gt; Organization.new(id: 1).flipper_id
=&gt; &quot;Organization;1&quot;
</code></pre>
<!--kg-card-end: markdown--><p>We didn&apos;t want to litter the entire object space. But we thought at least these two models would be good additions.</p><p>Again, convention over configuration. If we can make a decision for you based on a best practice, then we will. </p><h2 id="automatic-cloud">Automatic Cloud</h2><p>I don&apos;t think that setup was much of a barrier to entry for <a href="https://www.flippercloud.io/?ref=johnnunemaker">Cloud</a>. </p><p>What I&apos;m hearing is current Flipper users (OSS) already have work arounds for some of the current problems Cloud solves. Or, they&apos;re concerned we&apos;ll impact their availability (<strong>hint</strong>: we won&apos;t, <a href="https://www.youtube.com/watch?v=aV6DkfdFOT0">watch here</a> and/or read on). </p><p>Regardless, while we were on this reduce friction mission, we made Cloud more automatic as well. </p><h3 id="superfluous-setting-removal">Superfluous Setting Removal</h3><p>First, sticking with the theme of this release, we removed a superfluous setting (<a href="https://github.com/jnunemaker/flipper/pull/511">#511</a>). If you have <code>sync_method</code> or <code>FLIPPER_CLOUD_SYNC_METHOD</code> configured, just &#x2620;&#xFE0F; them.</p><p><code>FLIPPER_CLOUD_SYNC_SECRET</code> now automatically switches Cloud&apos;s <code>sync_method</code> to <code>:webhook</code> negating the need for <code>sync_method</code> shennanigans. </p><h3 id="automatic-configure">Automatic Configure</h3><p>Since we had automatic configuration of the bundled adapters, it seemed only right to make cloud automatically configure as well (<a href="https://github.com/jnunemaker/flipper/pull/506">#506</a>). </p><p>Let&apos;s say you want to use Active Record for Flipper reads in your app with Cloud as the source of truth. Here you go:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">gem &quot;flipper-active_record&quot;
$ rails g flipper:active_record &amp;&amp; rails db:migrate
gem &quot;flipper-cloud&quot;
# set FLIPPER_CLOUD_TOKEN
</code></pre>
<!--kg-card-end: markdown--><p>That&apos;s it. Add the gems. Generate the tables for Active Record. Set the environment variable for Cloud. Done. </p><p>You want to use Redis for feature flag reads all controlled by Cloud? </p><p>No problem:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">gem &quot;flipper-redis&quot;
gem &quot;flipper-cloud&quot;
# set FLIPPER_CLOUD_TOKEN
</code></pre>
<!--kg-card-end: markdown--><p>Whatever adapter you pick, Cloud automatically wraps it (<a href="https://github.com/jnunemaker/flipper/blob/12895efd3f85dc34a244eddea6793da1f0d35e42/lib/flipper/cloud.rb#L52">here</a>, <a href="https://github.com/jnunemaker/flipper/blob/12895efd3f85dc34a244eddea6793da1f0d35e42/lib/flipper/cloud/configuration.rb#L132">here</a> and <a href="https://github.com/jnunemaker/flipper/blob/12895efd3f85dc34a244eddea6793da1f0d35e42/lib/flipper/cloud/configuration.rb#L135-L137">here</a>). </p><p>All reads in your app go to the local adapter you pick (isolating your app&apos;s availability from Cloud) and all writes go to Cloud and then the local adapter. </p><p><strong>The result is your feature flag reads are blazing fast</strong>. But you get multi-environments, permissions, audit history and more from Cloud.</p><h3 id="automatic-webhooks">Automatic Webhooks</h3><p>The aforementioned configuration would setup polling as the synchronization method with cloud. For production, we don&apos;t recommend polling. <strong>We want your app to be as isolated from Cloud as possible</strong>. It&apos;s just good architecture. </p><p>Instead, we provide webhooks that ping your app and tell it to sync with us. As of this release, Cloud automatically mounts the webhook middleware in your app if <code>FLIPPER_CLOUD_TOKEN</code> and <code>FLIPPER_CLOUD_SYNC_SECRET</code> are configured (<a href="https://github.com/jnunemaker/flipper/pull/506">#506</a>). </p><p>&#x1F6A8; I&apos;m going to say that again. &#x1F6A8;</p><p><strong>Add two gems</strong>. </p><p><strong>Add two environment variables</strong>. </p><p><strong>And you can control your code without changing your code from anywhere</strong>.</p><p>It&apos;s huge folks.</p><h2 id="easy-upgrade">Easy Upgrade</h2><p>Unfortunately this section isn&apos;t automatic. You have to do something. But we made it as easy as we can. </p><p><strong>The good news is</strong> upgrading the gem should just work&#x2122; in a backwards compatible way. &#x1F605;</p><p><strong>The even better news is</strong> if you read over the <a href="https://github.com/jnunemaker/flipper/blob/a82aa8d93c43725a98219ad3b61160ebf65e9cc4/Changelog.md#0210">changelog</a> and follow our <a href="https://github.com/jnunemaker/flipper/blob/a82aa8d93c43725a98219ad3b61160ebf65e9cc4/Changelog.md#upgrading">upgrade instructions</a>, you&apos;ll likely get to remove a bunch of code (a good ol&apos; &#x1FA78; diff).</p><h3 id="qa-in-the-wild">QA in the Wild</h3><p>Knowing that this release changes a lot of guts, we battle tested it on <a href="https://www.flippercloud.io">Cloud</a> itself, <a href="https://boxoutsports.com">Box Out Sports</a>, and <a href="https://sailboat.guide">Sailboat Guide</a> prior to releasing to you. </p><p>They&apos;ve all been upgraded for several days without any issues. We hope that our pain is your gain (and trust me there <em>was</em> pain making this smooth for you). </p><h2 id="wrap-up">Wrap Up</h2><p>That&apos;s it. We&apos;re pumped about this release. It takes <strong>simplicity and ease of use</strong> to the next level while retaining <strong>stability and compatibility</strong>. </p><p>If you aren&apos;t using feature flags yet, <strong>you have no reason not to</strong>. If you are already using flipper, <strong>upgrading should be easy</strong>. </p><p>Either way, <a href="http://github.com/jnunemaker/flipper/issues/new">let us know</a> if you have any problems. Happy flipping!</p><p><strong>P.S.</strong> If you like all of these changes, shout out to <a href="https://twitter.com/bkeepers">@bkeepers</a> on twitter. This was all him. He tried out <a href="https://www.flippercloud.io/?ref=johnnunemaker">Cloud</a> a month or so ago, put his pinky to the corner of his mouth and said &quot;This could be simpler.&quot; </p><p>Making it simpler was a lot of hard work. But now it is. </p>]]></content:encoded></item><item><title><![CDATA[Why you should blog in 2021]]></title><description><![CDATA[Seemingly everyone I know has given up on blogging. I'm not really sure why. Maybe because doing it well is hard? Regardless, it's still super valuable.]]></description><link>https://www.johnnunemaker.com/why-you-should-write-in-2021/</link><guid isPermaLink="false">6080898dc8e38e0048d05e4e</guid><category><![CDATA[thoughts]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Thu, 22 Apr 2021 18:29:05 GMT</pubDate><content:encoded><![CDATA[<p><strong>My recent spurt of posts</strong> has reminded me just why blogging is <em>still</em> valuable. </p><p>Sure, podcasts are the rage. And Twitter has threads so you can basically blog there. And newsletters, I mean they are way more <em>fetch</em> than a blog, right?</p><p>Actually, before we go on <strong>I need to get something off my hairy chest</strong>. I had to google what the youngsters say now instead of &quot;hip&quot;. I wanted to say &quot;hip&quot;. But as soon as I typed it, I felt old. </p><p>Because I knew that people don&apos;t say hip anymore unless they are referring to their actual hip (you know, on their body). </p><p>I guess now they say &quot;<strong>fetch</strong>&quot; or at least that is <strong>what a quick google turned up</strong>.</p><p>Ok, now that we are past my <em>inadequacies</em> in the linguistics department, let&apos;s get back on topic. Blogging. </p><p>So anyway, I still think <strong>blogging is life changing</strong>. And I&apos;m here today to convince you of the same.</p><p>Onward.</p><h2 id="mental-storage-and-organization">Mental Storage and Organization </h2><p><strong>This has long been apparent to me</strong>. Blogging is a fantastic way to store and organize thoughts. </p><p>The more I&apos;ve written about various programming things (my preferred topic) over the years, the more those things have become cemented (stored) in my head. </p><p>Also, blogging has made those things easier to find again when I need them.</p><p>Let me explain. I&apos;ll start with storage.</p><h3 id="storage">Storage</h3><p><strong>We&apos;ve all done it</strong>. Hmmm, I need to do <em>X</em>. I&apos;ve done <em>X</em> before on that one project. But what project was it? Was it project A? Or project B? Wait no, I think it was project Z. Nope. Dang, what project did I do that on???</p><p>Or, I know I did <em>X</em> on project A. But I can&apos;t for the life of me remember what I named things to find how I did it. And this project is huge. </p><p><strong>Several searches later</strong>, I&apos;m annoyed because this would be a simple copy/paste if I could just remember what to search for.</p><p>Maybe its just me. But I do this weekly, or at least bi-weekly. </p><p><strong>Blogging helps with this because as you do <em>X</em>, you write about it</strong>. Then, later on when you are googling how to do <em>X</em> again (or trying to remember) you can go to one place (your blog) instead of several different projects/folders on your laptop.</p><p>I&apos;ve done this many times <strong>with this here site </strong>you are reading and in the past with <a href="http://www.railstips.org">RailsTips</a>. I haven&apos;t written a post on RailsTips in 5 years. But a few times a year I find myself re-reading a post I wrote to steal a technique I used.</p><h3 id="organization">Organization</h3><p>You&apos;d think that after programming a big batch of code that things would be really well organized in your head. <strong>But they aren&apos;t</strong>. I mean don&apos;t get me wrong, you believe they are. But they aren&apos;t.</p><p>Maybe it doesn&apos;t work this way for everyone, but it does for me. Hear me out.</p><p>My first pass on a post is usually just puking onto the page. <strong>Sorry for the visual.</strong> But &#x1F92E; best represents it. It isn&apos;t polished. It isn&apos;t valuable. It isn&apos;t even coherent.</p><p>Once I&apos;ve written a large section of gibberish, I edit. This is where the post starts to get structured and receives some flair. </p><p>Often I open up two browser windows. One has the ghost editor. The other has the post preview. Save (in editor). Refresh (in preview). Save. Refresh. Over and over. </p><p>Why? I want to spend the extra time to make the post as <strong>easy to consume as possible</strong> for the reader. I add headings. If a section is too long between those headings I break it up with sub-headings. </p><p>Every few paragraphs I bold important phrases or add emoji or images to <strong>keep pulling the reader&apos;s eye down the page</strong>. I&apos;m doing it in this post. See, I just did it. </p><p>Anyway, the point is all of this organization of thoughts into words and structure on the page doesn&apos;t just make it easier to read. </p><p><strong>Even if no one cares about what I&apos;m writing, organizing things on the page also organizes them in my head. And that is valuable. </strong></p><p>The value of blogging doesn&apos;t stop at mental organization though. Readers respond.</p><h2 id="feedback-is-great">Feedback is Great</h2><p><strong>The key here is not just any feedback</strong> &#x2013; but, more importantly, feedback on other or better ways to do what you wrote about. </p><p>Immediately after posting on <a href="https://www.johnnunemaker.com/rails-authorization/">rails authorization</a>, <a href="https://twitter.com/palkan_tula">Vladimir</a> tagged me in a tweet about their project with similar goals and capabilities.</p><figure class="kg-card kg-embed-card"><blockquote class="twitter-tweet"><p lang="en" dir="ltr">This post by <a href="https://twitter.com/jnunemaker?ref_src=twsrc%5Etfw">@jnunemaker</a> brings a lot of flashbacks from my days with Pundit: <a href="https://t.co/X61GZKXZNt">https://t.co/X61GZKXZNt</a> <br><br>I also went through the phase of enhancing/customizing Pundit but ended up building Action Policy.</p>&#x2014; Vladimir Dementyev (@palkan_tula) <a href="https://twitter.com/palkan_tula/status/1372802494594576391?ref_src=twsrc%5Etfw">March 19, 2021</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</figure><p>After a short tweetfest with Vladimir, I knew how to do most of what I was doing on my own with their open source code. Next time I reach for authorization on a project, I&apos;ll likely try <a href="https://actionpolicy.evilmartians.io/">action policy</a> first. If it works out, that will save me time. </p><p>Maybe I would have eventually stumbled on action policy on my own. But the project is 3 years old and I hadn&apos;t come across it yet. I blogged and now I know about it. Thanks Vladimir! Oh, and thanks blogging!</p><p>Need another example?</p><h3 id="another-example">Another Example </h3><p>Same goes for my post on <a href="https://www.johnnunemaker.com/webhooks/">webhooks</a>. I included a code snippet that attempted to avoid allowing webhooks to localhost. Seems like a security risk, right?</p><p><a href="https://twitter.com/stympy">Ben Curtis</a> saw it and <a href="https://twitter.com/stympy/status/1374481222584307717?s=20">kindly shared</a> what <a href="https://gist.github.com/stympy/f831f3ad68db28ec60efc9737e09050a">he uses</a> for <a href="https://www.hookrelay.dev">hookrelay.dev</a>. His feedback took my weak and incomplete start to the next level &#x2013; including checks of other private IP ranges. <a href="https://www.flippercloud.io">Flipper Cloud</a> is more secure because of it. Thanks Ben!</p><p>I provided value to Ben by writing up my implementation. And he provided value to me by improving it. We both win! &#x1F4AA;</p><p>Those are just a couple of examples of feedback. But if you were to look back through my posts over time and the great feedback I&apos;ve received, you&apos;d likely sign up for <a href="https://ghost.org">ghost</a> today and <strong>start writing</strong>.</p><h2 id="everyone-is-in-sales">Everyone is in Sales</h2><p><strong>I&apos;ve read a lot of books in the past year </strong>on sales, marketing, and copywriting<strong>.</strong> Like a lot. The trending theme in these books is that <strong>everyone is in sales</strong>. You just don&apos;t realize it.</p><p>Have a friend? You are selling that the time they spend with you is worth it. </p><p>Have a product? You are selling that product to customers. </p><p>Work for a company? You are selling your time to them. </p><p><strong>And sales is about serving, not about selling</strong>. </p><p>As Dan Pink says in &quot;<a href="https://www.amazon.com/Sell-Human-Surprising-Moving-Others-ebook/dp/B0087GJ8KM/">To Sell is Human</a>&quot;:</p><!--kg-card-begin: markdown--><blockquote>
<p>Anytime you&#x2019;re tempted to upsell someone else, stop what you&#x2019;re doing and upserve instead.</p>
<p>Don&#x2019;t try to increase what they can do for you.</p>
<p>Elevate what you can do for them.</p>
</blockquote>
<!--kg-card-end: markdown--><p>Would my company have been <a href="https://www.johnnunemaker.com/speakerdeck/">GitHub&apos;s first acquisition</a> if I didn&apos;t <a href="http://www.railstips.org/blog/archives/2006/06/05/want-railstips-org/">take over RailsTips</a> in 2006 and proceed to write nearly <strong>200 posts in 4 years</strong>? </p><p>We&apos;ll never know. But what I do know is blogging helped &#x2013; a lot! </p><h2 id="a-huge-store-of-value">A Huge Store of Value</h2><p><strong>You read that right. I averaged a post a week for 4 years</strong>. I didn&apos;t even know that until just now when I went and counted them. </p><p>Sure, all that blogging really organized a lot of things in my head and provided me with a lot of feedback so I could <em>learn</em> and <em>grow</em>.</p><p><strong>But unknowingly I was building up this huge store of value</strong>. Every post was selling me to potential friends, customers, employers and even acquirers. </p><p>Eventually, I was able to cash in on that value figuratively when we were <a href="http://www.railstips.org/blog/archives/2011/12/05/acquired/">acquired by GitHub</a> &#x2013; and literally when GitHub was <a href="https://news.microsoft.com/2018/06/04/microsoft-to-acquire-github-for-7-5-billion/">acquired by Microsoft</a>.</p><p><strong>Come to think of it, I can&apos;t name a single person who has committed to creating value for others weekly for several years with <em>little</em> or <em>no</em> success</strong>. Not a one. All of the names that come to mind are doing really well.</p><h2 id="whoa">Whoa</h2><p>Dang. <strong>This wasn&apos;t my plan for this post</strong>. I had several other points. But I sat down and started typing and that is what came out. And now that I&apos;m at the end, I&apos;m kind of sitting here at my desk a bit shocked. </p><p>I didn&apos;t <em>really</em> connect the dots as to what has went well in my professional life until just now. If you consistently put value out there in the world, it comes back to you. So simple it doesn&apos;t seem worth saying. But its true and easy to forget.</p><p><strong>You reap what you sow. Go plant some blog posts. </strong></p><p>But don&apos;t give up. Nothing worthwhile comes easy. Put a few years in and then come back here and let me know how you&apos;re doing.</p>]]></content:encoded></item><item><title><![CDATA[Ruby Rogues: How to Reduce Friction at the Authorization Layer]]></title><description><![CDATA[<p>&#x1F399; This week I joined the Ruby Rogues to <a href="https://devchat.tv/ruby-rogues/ruby-494-reducing-friction-at-the-authorization-layer-with-john-nunemaker/">talk about rails and authorization</a> &#x2013; specifically <a href="https://www.johnnunemaker.com/rails-authorization/">my recent post on the topic</a>.</p><p>We chatted about GitHub, conventions, communication, authorization, DSLs, &#xA0;<a href="https://www.flippercloud.io">Flipper Cloud</a>, shame, centralized config + sync, <a href="https://www.osohq.com">Oso</a> (which I mistakenly referred to as Snyk) and more. </p><p>The episode couldn&</p>]]></description><link>https://www.johnnunemaker.com/ruby-rogues-authorization/</link><guid isPermaLink="false">60808020c8e38e0048d05d81</guid><category><![CDATA[podcast]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Wed, 21 Apr 2021 19:57:39 GMT</pubDate><content:encoded><![CDATA[<p>&#x1F399; This week I joined the Ruby Rogues to <a href="https://devchat.tv/ruby-rogues/ruby-494-reducing-friction-at-the-authorization-layer-with-john-nunemaker/">talk about rails and authorization</a> &#x2013; specifically <a href="https://www.johnnunemaker.com/rails-authorization/">my recent post on the topic</a>.</p><p>We chatted about GitHub, conventions, communication, authorization, DSLs, &#xA0;<a href="https://www.flippercloud.io">Flipper Cloud</a>, shame, centralized config + sync, <a href="https://www.osohq.com">Oso</a> (which I mistakenly referred to as Snyk) and more. </p><p>The episode couldn&apos;t be more different than my two recent interviews on the <a href="https://www.johnnunemaker.com/slow-steady/">Slow &amp; Steady</a> and <a href="https://www.johnnunemaker.com/founderquest-interview/">Founder Quest</a> podcasts. Those two stuck to business and career. </p><p>In contrast, the Rogues stuck tightly to code, so if you are in the mood (and who isn&apos;t...) for <code>catch</code>/<code>throw</code>, <code>instance_eval</code> and memoization, you can <a href="https://devchat.tv/ruby-rogues/ruby-494-reducing-friction-at-the-authorization-layer-with-john-nunemaker/">listen here</a>. </p><p>Enjoy!</p>]]></content:encoded></item><item><title><![CDATA[How to build an app, get acquired by GitHub, buy an app back from GitHub and then sell it again]]></title><description><![CDATA[<p>Let&apos;s set the scene. The year was 2010. Twitter was exploding. Instagram just became a thing. Myspace was formally dead. </p><p>Speaking of formal, my attire was cargo shorts, a t-shirt and crocs (classic clog of course, likely tan to match my shorts) &#x2013; aka &quot;the nuneform&quot;</p>]]></description><link>https://www.johnnunemaker.com/speakerdeck/</link><guid isPermaLink="false">6079816c912743003ea3896f</guid><category><![CDATA[business]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Fri, 16 Apr 2021 18:53:17 GMT</pubDate><content:encoded><![CDATA[<p>Let&apos;s set the scene. The year was 2010. Twitter was exploding. Instagram just became a thing. Myspace was formally dead. </p><p>Speaking of formal, my attire was cargo shorts, a t-shirt and crocs (classic clog of course, likely tan to match my shorts) &#x2013; aka &quot;the nuneform&quot;. </p><p>I was standing at my standing desk and hacking while my feet rested effortlessly in the most delightfully comfortable shoes in the world.</p><h2 id="scratch-that-itch">Scratch That Itch</h2><p><a href="https://speakerdeck.com">Speaker Deck</a> started as a happy accident. I mucked up a command line call to imagemagick and passed in the path to a PDF instead of an image. To my surprise, an image was returned. </p><p>Was it really that easy to convert a PDF to images? It was. </p><p>From there, I knew all presentation building apps could export to PDF. I also knew that showing off a presentation was basically just an image gallery where the images are shown in a particular order. </p><p><a href="https://orderedlist.com">Steve</a> and I were hustling our products at conferences. We were also both teaching at the University of Notre Dame. A by-product of these acts was a lot of slide decks to share. </p><p>We weren&apos;t fans of the experience on <a href="https://slideshare.net">SlideShare</a> and thought it would be neat to whip something together. </p><p><strong>Lesson: Scratch your own itch. Take on giants in huge markets (at least then you know there <em>is</em> a market).</strong></p><p>Jon Hoyt was looking to do more programming and hanging out with us more often. So Hoyt started hacking on Speaker Deck. We <a href="http://archive.orderedlist.com/blog/archives/welcome-jon-hoyt/">hired him</a> a few months later. We often joke that Speaker Deck was his job interview. </p><p><strong>Lesson: Do some work together before you officially work together.</strong></p><p>Speaker Deck <a href="http://archive.orderedlist.com/blog/archives/share-presentations-without-the-mess/">launched</a> in September 2011, three days before <a href="http://confreaks.tv/events/rubyconf2011">RubyConf</a> in New Orleans. All of <a href="http://archive.orderedlist.com">Ordered List</a> loaded up in a van and road tripped from south for the conference. </p><h2 id="go-to-that-conference">Go To That Conference</h2><p>One afternoon at RubyConf, I was enjoying the &quot;hallway track&quot; with @defunkt (founder of github if you don&apos;t recognize the OG handle) in the bar at the conference hotel. He was asking about Ordered List and I was asking about GitHub (44 people at the time). </p><p><strong>Lesson: Conferences are about the friends you make, not the talks you listen to.</strong></p><p>We usually ran into each other at conferences. So I didn&apos;t think much of it other than enjoying the chat. RubyConf ended and the Ordered List crew piled back in the van to head back north to Indiana. </p><p><strong>Then, it happened</strong>. Saturday. 4:25pm. <strong>Ding. </strong></p><p>A new email from @defunkt with the subject: <strong>Investment. </strong></p><p>A single paragraph in length, including a &#x1F4B5; amount and a compliment. <strong>WOW</strong>. </p><p>I still remember <strong>my stomach flipping</strong> and an immediate smile. Positive feedback always feels great, but from the CEO of GitHub? Heck yeah!</p><p>We weren&apos;t looking for investment. But how can you say no to that? </p><p>I immediately text Steve and he was pumped too. </p><p><strong>I wasn&apos;t sure how to respond so I waited</strong> and <em>tried</em> to not think about it.</p><p>Sunday. 24 hours later. <strong>Ding</strong>. New email. <strong>It was @defunkt again</strong>. The email started with a completely unnecessary apology. Remember I hadn&apos;t responded because I was still reeling with excitement, not due to offense. He also included a huge pitch about how awesome we were and how he could help us (as if we didn&apos;t know how much he could help us). He said he could be in South Bend as soon as Wednesday to talk more. </p><p>I didn&apos;t make him wait after this email. Rarely were Steve and I too busy to meet with anyone. But we were that week. So I told @defunkt his email was awesome and that I&apos;d get back to him in a few days.</p><p><strong>Lesson: Silence is a super power if you can live with occasional awkwardness &#x2013; both in conversation and negotiation.</strong></p><p>@defunkt, Steve and I met up the October 27th in South Bend. We spent the entire day talking about possibilities at our office (the tiny tower pictured below).</p><figure class="kg-card kg-image-card"><img src="https://www.johnnunemaker.com/content/images/2021/04/ordered-list-office.jpg" class="kg-image" alt loading="lazy" width="1000" height="659" srcset="https://www.johnnunemaker.com/content/images/size/w600/2021/04/ordered-list-office.jpg 600w, https://www.johnnunemaker.com/content/images/2021/04/ordered-list-office.jpg 1000w" sizes="(min-width: 720px) 720px"></figure><p>Mid-day the <strong>conversation turned from investment to acquisition</strong>. This was unexpected, but delightful. </p><p>We finished @defunkt&apos;s quick trip the next morning with his first baked oatmeal experience. He flew back to SF on a full stomach and <strong>still raves</strong> about that oatmeal. &#x1F602;</p><h3 id="the-offer">The Offer</h3><p>Two weeks later Steve and I flew to SF to meet with all the company leaders. They presented a pitch and threw out an offer. The neatest thing I can remember is @defunkt demo&apos;d an early version of Atom (this was Dec 2011).</p><p>My strongest memory is of our time in the situation room (the fancy office in GitHub HQ 2.0). It was blazing &#x1F525; and both sides were nervous. Not one of us had been involved in an acquisition. <strong>Just a bunch of sweaty rookies. &#x1F605;</strong> </p><p>GitHub offered the usual &#x2013; jobs with salaries and benefits, some cash up front and stock options. </p><p>Steve and I have always been <strong>focused on long term value</strong>, so we <strong>countered</strong> with <strong>double the stock options</strong>. </p><p>GitHub knew what they had. So they <strong>countered</strong> with <strong>double the cash</strong>. Ooooooohhhhh do I wish I&apos;d negotiated one last time for any additional equity. Live and learn. </p><p><strong>Lesson: Never accept the first offer. Always negotiate. Even though we didn&apos;t get more equity, we doubled the cash by countering once.</strong></p><h3 id="happy-birthday-%F0%9F%8E%82">Happy Birthday &#x1F382;</h3><p>On November 25, 2011 (my 30th birthday), we accepted. The hilarious thing is we <a href="http://archive.orderedlist.com/blog/archives/ordered-list-acquired-by-github/">started</a> at GitHub on December 5th, effectively on a handshake. Needless to say <strong>the lawyers weren&apos;t very happy</strong> on either side. </p><p>After a few months of legal back and forths, we finally just told the lawyers to agree on something so we could all sign and be done. </p><p><strong>Lesson: Create and sign the paper work first. I&apos;ve done a handful of handshake deals in my life and they&apos;ve all turned out great. But that is insanely rare.</strong></p><h2 id="hello-old-friend">Hello Old Friend</h2><p>Speaker Deck never really went anywhere at GitHub. It grew and people used it, but it mostly sat in maintenance mode. </p><p>In 2017, a few people contacted support about buying Speaker Deck from GitHub. At this point, GitHub was so successful that <strong>even taking time to vet a buyer</strong> and do the deal <strong>wasn&apos;t worth it to them</strong>.</p><p>Due to my history with Speaker Deck and the fact that I was maintaining it on the side at GitHub anyway, I volunteered to vet a buyer. </p><h3 id="why-not-me">Why Not Me?</h3><p>Then, it occurred to me. <strong>I wanted to be the buyer</strong>.</p><p>But why would a company sell a product to an employee? Well, if you trust the employee, its a win/win. &#x1F60E;</p><p>GitHub gets to move Speaker Deck to a new home. The new home is <strong>trusted</strong> and <strong>vetted</strong>. They don&apos;t have to shut the service down. That&apos;s a <strong>PR win</strong> for them. <strong>Due dilligence isn&apos;t necessary</strong> because I created the app and was maintaining it. I knew what I was getting into.</p><p>From my point of view, it was also a win. I got a <strong>creative outlet</strong> to work on something small <strong>that I controlled</strong>. GitHub was thousands of people at this point, which didn&apos;t leave me with much control over anything. </p><p>I made an official offer to acquire Speaker Deck from GitHub in August 2017. It took a while, but they approved in December. They even cut the offer I made by 90%. They basically gave the site to me. Super cool. &#x1F913;</p><p><strong>Lesson: You&apos;ll never know if you never ask. The worst result is they say no.</strong></p><h3 id="closing-the-deal">Closing the Deal</h3><p>But months later, there was no movement on the deal still. Then, out of nowhere I got an email in June 2018 saying they wanted to close immediately. </p><p>I was like sweet! Friday, June 4th, 2018 we signed the paper work and <strong>Speaker Deck was coming home</strong>. &#xA0;</p><h3 id="microsoft-comes-knocking">Microsoft Comes Knocking</h3><p>Little did I know the reasons behind this quick change. A day later, I was at the park with my son. I got a text from someone saying there was a rumor that Microsoft was acquiring GitHub.</p><p>There had been many rumors of different big companies acquiring GitHub during my time there. Normally, I took no stock in rumors like these &#x2013; other than using that big fake number to calculate my fake net worth. &#x1F606;</p><p><strong>But this rumor felt different. </strong></p><p>Why had the Speaker Deck deal <strong>suddenly closed out of nowhere</strong> after months of no change? Microsoft owned LinkedIn, which owned SlideShare. I could connect the dots (not that Speaker Deck ever factored into Microsofts decision, haha). It had to be true. </p><p>And it was. GitHub had to know that Speaker Deck would be dead if they were acquired by Microsoft, so they quickly shipped it off to me. And it lived on. Again, super cool. &#x1F913;</p><h2 id="the-second-reign">The Second Reign</h2><p>Following the Microsoft acquisition of GitHub, I took some time off. We (Steve joined me on this Speaker Deck venture) didn&apos;t really do anything with Speaker Deck (other than a redesign and some ugprades) and floated the bills for it (low thousands a month) for nearly a year. </p><p>At some point, we decided to put some tasteful ads on it to reduce the out of pocket each month. For a while, it broke even and a few months it even made money. But then covid hit and advertising revenue went nearly to zero &#x1F4C9;. </p><p>Steve and I knew we needed to do something to stop the bleeding. We had a mutual friend who was interested in it and considered cutting our losses and selling to them. </p><p><strong>Instead, we rolled up our sleeves and went to work on making it profitable.</strong> You know, crazy idea, right? Charge people for your software. </p><p>We added multiple new features (following, notifications, private decks, priority uploading, scheduled publishing, etc.) over the next few months and <a href="https://speakerdeck.com/speakerdeck/become-a-pro">launched</a> several of them as a <a href="https://speakerdeck.com/pro">Pro account</a> last December. </p><p>My hope was that within a year Speaker Deck would break even. The great news is that <strong>each month since charging money</strong> (including the very first) Speaker Deck has <strong>generated more revenue than expenses</strong>. </p><p>And last month between the MRR and ad revenue, it is <strong>now sustainably making money each month</strong>. </p><p><strong>Lesson: Charge money for your software. Charge more than you think people will pay. Do it now. </strong></p><h2 id="goodbye-old-friend">Goodbye Old Friend</h2><p>So how do I get from sustainably making money to selling Speaker Deck again? </p><p>About a month back I was stressed. And I&apos;m pretty sure Steve was as well. I hate feeling stressed. Some stress is unavoidable. <strong>But all my stress was self-inflicted. </strong></p><p>Trying to push 3 apps (<a href="https://boxoutsports.com">Box Out</a>, <a href="https://speakerdeck.com">Speaker Deck</a> and <a href="https://www.flippercloud.io">Flipper Cloud</a>) forward with 2 developers (Steve and myself) can be frustrating. </p><p><strong>We&apos;re only going to work so many hours in a day</strong>, so our options seemed like:</p><ol><li>be satisfied with each app inching along.</li><li>contract out some help for 1-3 of the apps.</li><li>get rid of an app. </li></ol><p>We were never going to be ok with option #1. I know we can make great products. <strong>My goal this time around is to learn distribution.</strong> </p><p>I want to see if I can make a product grow faster. It just seems like a fun thing to learn. Growing faster is the opposite of inching along.</p><p><strong>Lesson: When you aren&apos;t sure, diversify. When you are sure, concentrate and focus.</strong></p><h3 id="getting-some-help">Getting Some Help</h3><p>So we started down the path of #2 above. For sanity&apos;s sake, it was time to get help. </p><p>Our plan was to each set aside a chunk of our money for Fewer &amp; Faster. This chunk plus Speaker Deck&apos;s profits could fund contracting work on Speaker Deck until it could fully fund itself.</p><p>I knew what needed to be done on Speaker Deck. But just didn&apos;t have time to do it. Contracting would make it possible to move the app forward without me being stressed (maybe). We could get help with spam fighting, support and development work.</p><h3 id="an-afternoon-call">An Afternoon Call</h3><p>Unrelated, Steve and I were chatting on the phone one afternoon about adding a new person to Fewer &amp; Faster. I was pacing back and forth in my office, still feeling a little stressed from the mountain of work that could and should be done, when Steve was like, &quot;<strong>We should just sell Speaker Deck.</strong>&quot; </p><p><strong>I had the same thought</strong> in the &#x1F6BF; the day before. <strong>But hadn&apos;t said it out loud</strong> to anyone &#x2013; even my wife. I agreed and immediately reached out to our friend again. </p><p>They were still interested. They made an offer a few days later. We accepted and closed the deal Tuesday of this week. I worked with them to transfer every thing. It&apos;s done.</p><p><strong>Speaker Deck has a new home</strong>. And I&apos;m excited about that. </p><p>I&apos;m excited that now I have only 2 apps to focus on. My primary focus will continue to be Box Out, but now any other time can be funneled to Flipper Cloud, which is really my passion, instead of split between Speaker Deck and Flipper Cloud.</p><p><strong>We didn&apos;t sell Speaker Deck for the money.</strong> Its likely we could have shopped it around and made more. <strong>We sold it to focus. </strong></p><p>Also, I&apos;m excited for my friend &#x2013; who was already helping us a bit with several Speaker Deck related things. Now they can take the reins and make an impact without feeling like they have to wait on Steve or myself to respond or approve or build. </p><p>I&apos;m already seeing how fast they are responding to support requests and wishing we would have done this a month or two ago.</p><p>Lastly, I&apos;m excited because I finally helped prove that Speaker Deck has <strong>value</strong> and can be a <strong>business</strong>, which I believed a decade ago when we started it. </p><p>Its making money. Its growing. <strong>That&apos;s neat.</strong></p>]]></content:encoded></item><item><title><![CDATA[Rails: How to Send and Receive Webhooks]]></title><description><![CDATA[This covers the joys and pains of a fully functional webhook system. Along the way I practice shower driven development to solve my problems.]]></description><link>https://www.johnnunemaker.com/webhooks/</link><guid isPermaLink="false">6046aef05d72d300395b275a</guid><category><![CDATA[rails]]></category><category><![CDATA[flipper]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Tue, 23 Mar 2021 12:41:28 GMT</pubDate><content:encoded><![CDATA[<p> There are two pieces to webhooks in <a href="https://www.flippercloud.io/">Flipper Cloud</a> &#x2013; <em>sending</em> and <em>receiving</em>. Typically, a webhook system is only about the sending and receiving is left as an exercise for the customer. </p><p>But our situation is different. All feature flag data is stored locally in your application to keep <strong>reads blazing fast</strong>. In order to do this, we need to update your application data when things change in Cloud. This means we need a mechanism to sync. </p><p>Cloud supports two ways of syncing &#x2013; <strong>polling</strong> (in development) and <strong>webhooks</strong>. But webhooks are the recommended way for syncing changes in Cloud to your application &#x2013; especially in production. They ensure your application requests are never tied up polling for new data. </p><p>I didn&apos;t want every customer building their own webhook receiver and sync, so I knew I&apos;d need to provide something automatic for them.</p><p>Before you can receive, you must send.</p><h2 id="sending-webhooks">Sending Webhooks</h2><p>I knew that webhooks would be tied to an environment. For those that are new here (&#x1F44B;) or need a refresher, Flipper Cloud is <a href="https://www.johnnunemaker.com/flipper-cloud-environments/">multi-environment</a> in a few different ways. </p><p>The main relationships you need to know are:</p><ul><li>an <code>Organization</code> is the root. </li><li><code>Organization has_many :projects</code> </li><li><code>Project has_many :environments</code> (e.g. QA, staging, production, etc.). </li><li><code>Environment has_many :webhooks</code> </li><li>And, finally, <code>Webhook has_many :webhook_responses</code></li></ul><h3 id="managing-the-hooks">Managing the hooks</h3><p>The boring, and perhaps more obvious, part of all this is the managing of webhooks. This looks like a fairly typical Rails <a href="https://www.codecademy.com/articles/what-is-crud">CRUD</a> section. </p><p>At of the time of writing, our webhooks table looks like this:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">create_table &quot;webhooks&quot;, force: :cascade do |t|
  t.string &quot;url&quot;
  t.integer &quot;state&quot;, default: 0, null: false
  t.integer &quot;creator_id&quot;, null: false
  t.integer &quot;environment_id&quot;, null: false
  t.datetime &quot;created_at&quot;, null: false
  t.datetime &quot;updated_at&quot;, null: false
  t.string &quot;secret&quot;, limit: 50, null: false
  t.text &quot;description&quot;
  t.index [&quot;environment_id&quot;], name: &quot;index_webhooks_on_environment_id&quot;
end
</code></pre>
<!--kg-card-end: markdown--><p>We have a pretty standard Rails model wrapped around the table. It looks mostly like this:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">require &quot;securerandom&quot;

class Webhook &lt; ApplicationRecord
  # Regex that webhook url must match.
  URL_REGEX = URI.regexp([&apos;http&apos;, &apos;https&apos;])

  # Hosts that we don&apos;t want to make requests to.
  DENIED_HOSTS = %w(localhost 127.0.0.1).freeze

  has_secure_token :secret

  belongs_to :creator, class_name: &quot;User&quot;
  belongs_to :environment

  has_many :responses, class_name: &quot;WebhookResponse&quot;, dependent: :destroy

  delegate :project, to: :environment, allow_nil: true
  delegate :organization, to: :project, allow_nil: true

  enum state: {enabled: 0, deleted: 1, disabled: 2, disabled_by_admin: 3}

  validates :url,
    presence: true,
    format: { with: URL_REGEX, allow_blank: true }
  validates :creator_id, presence: true
  validates :environment_id, presence: true
  validate :url_host

  scope :created, -&gt; { where.not(state: :deleted) }
  
  private

  def url_host
    return if url.blank?
    uri = URI(url)
    if DENIED_HOSTS.include?(uri.host)
      errors.add(:url, &quot;is invalid&quot;)
    end
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>In the pics below, I show the UI for managing webhooks. In each of the screenshots, the UI is scoped to:</p><ul><li>Fewer &amp; Faster (organization) </li><li>Speaker Deck (project)</li><li>Production (environment) </li></ul><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://www.johnnunemaker.com/content/images/2021/03/webhook-list.png" class="kg-image" alt loading="lazy" width="1144" height="874"><figcaption>Viewing the list of webhooks</figcaption></figure><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://www.johnnunemaker.com/content/images/2021/03/webhook-add-1.png" class="kg-image" alt loading="lazy" width="1144" height="874"><figcaption>Adding a new webhook</figcaption></figure><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://www.johnnunemaker.com/content/images/2021/03/webhook-view-1.png" class="kg-image" alt loading="lazy" width="1144" height="874"><figcaption>Viewing individual webhook and responses</figcaption></figure><p>The controller for this area is, I would assume, a very stock Rails controller. If you recently read my post on <a href="https://www.johnnunemaker.com/rails-authorization/">reducing friction at the authorization layer</a>, you&apos;ll notice some of the policy enforcement below.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class WebhooksController &lt; ApplicationController
  layout &quot;environment&quot;
  before_action :find_organization_project_and_environment
  before_action :check_for_enabled_webhooks

  def index
    authorize @environment, :view_webhooks?
    @webhooks = @environment.webhooks.created.order(url: :asc).paginate(page: params[:page])
    Webhook.preload_latest_responses(@webhooks)
  end

  def show
    @webhook = @environment.webhooks.find(params[:id])
    @webhook_responses = FindWebhookResponses.call(@webhook, page: params[:page])
  end

  def new
    authorize @environment, :create_webhook?
    @webhook = @environment.webhooks.build(creator: current_user)
  end

  def create
    @webhook = CreateWebhook.call(
      actor: current_user,
      environment: @environment,
      url: webhook_params[:url],
      description: webhook_params[:description]
    )

    if @webhook.persisted?
      redirect_to [@organization, @project, @environment, @webhook], notice: &apos;Webhook was successfully created.&apos;
    else
      render :new
    end
  end

  def edit
    @webhook = @environment.webhooks.find(params[:id])
    authorize @webhook, :update?
  end

  def update
    @webhook = @environment.webhooks.find(params[:id])
    authorize @webhook, :update?

    if @webhook.update(webhook_params)
      redirect_to [@organization, @project, @environment, @webhook], notice: &apos;Webhook was successfully updated.&apos;
    else
      render :edit
    end
  end

  def destroy
    @webhook = @environment.webhooks.find(params[:id])
    authorize @webhook, :destroy?

    @webhook.deleted!
    redirect_to [@organization, @project, @environment, :webhooks], notice: &apos;Webhook was successfully deleted.&apos;
  end

  def send_test
    @webhook = @environment.webhooks.find(params[:id])
    webhook_policy = @webhook.policy(current_user)

    if webhook_policy.send_test?
      @webhook.sync
      flash[:notice] = &quot;Webhook test enqueued.&quot;
    else
      flash[:error] = webhook_policy.send_test.message
    end

    redirect_to [@organization, @project, @environment, @webhook]
  end

  def regenerate_secret
    @webhook = @environment.webhooks.find(params[:id])
    authorize @webhook, :regenerate_secret?
    @webhook.regenerate_secret
    redirect_to [@organization, @project, @environment, @webhook], notice: &quot;Webhook secret regenerated. Be sure to update any place you were using the old secret with the new one.&quot;
  end

  private

  def webhook_params
    webhook_params = params.require(:webhook).permit(:url, :description, :state)

    # If trying to use a state you don&apos;t have access to then remove the state.
    if state = webhook_params[:state]
      attempting_value_without_permission = !Webhook.state_select_valid_value?(current_user, state)
      non_admin_attempting_to_enable_admin_disabled = @webhook &amp;&amp; @webhook.disabled_by_admin? &amp;&amp; !current_user.admin?
      if attempting_value_without_permission || non_admin_attempting_to_enable_admin_disabled
        webhook_params.delete(:state)
      end
    end

    webhook_params
  end

  def find_organization_project_and_environment
    @organization = current_organization
    @project = @organization.projects.friendly.find(params[:project_id])
    @environment = @project.environments.friendly.find(params[:environment_id])
    authorize @environment, :show?
  end

  def check_for_enabled_webhooks
    unauthorized unless Flipper.enabled?(:webhooks, @organization)
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>There is a bit of gnarly code around determining if the user can edit the state that I&apos;d like to cleanup with a policy method, but I left it because I believe in showing you the <strong>warts and all</strong>. </p><p>If you noticed <code>Webhook.preload_latest_responses</code> and wondered about it, you can read my post on <a href="https://www.johnnunemaker.com/never-query-the-same-thing-more-than-once/">never querying the same thing more than once</a>.</p><h3 id="protection-with-a-feature-flag">Protection with a feature flag </h3><p>You may also notice that I check if the webhooks feature flag is enabled in a <code>before_action</code>. This allowed me to work on webhooks in production without customers using them <strong>before</strong> they were fully baked. </p><p>Could I remove that feature now that webhooks are fully released? Sure, I could. But it isn&apos;t hurting anything and does allow me to turn them off if I ever need to. For that reason, I&apos;ve left the feature check in. </p><h3 id="firing-the-hooks">Firing the hooks</h3><p>Now that people could manage webhooks, I needed to choose <strong>where</strong> and <strong>when</strong> a webhook request should actually be fired. </p><p>Thankfully, <a href="https://www.flippercloud.io">Flipper Cloud</a> <strong>already has audit history</strong> for feature flags. When features are created, enabled or disabled in anyway we store a record of that. This audit history is built into the custom flipper adapter that cloud uses to manage feature flag data for an environment.</p><p>I already had a <code>change</code> method in the adapter that was creating the audit history. That seemed like the perfect place to also send webhooks. I created a new <code>WebhookJob</code> so I could enqueue a background job in the <code>change</code> method.</p><p>This is where it starts to get &#x1F9C3;-y (aka juicy). </p><h3 id="what-could-go-wrong">What could go wrong</h3><p>My blessing and curse in life is <strong>fear of failure</strong>. It extends from my personal life (how should I invest this money) to my professional (how should I write this code). </p><p>I can&apos;t write a single line of code without <strong>mentally creating a matrix</strong> in my head of:</p><ul><li>how can this fail</li><li>how likely is this to fail</li><li>how bad would it be if it failed</li><li>how easy is it to handle failure</li><li>how can I remedy the failure</li><li>and the list goes on...</li></ul><p>Because of this curse, I <strong>immediately struggled</strong> with this job. We allow multiple webhooks per environment. I didn&apos;t want to enqueue <code>N + 1</code> jobs where <code>N</code> is the number of webhooks for the environment. What if one of the jobs failed to enqueue? </p><p>Also, <strong>I like constants</strong>. No, not Ruby constants like <code>User</code> or <code>BLAH_BLAH</code>, but bits of code that do a constant number of network calls &#x2013; aka <a href="https://www.johnnunemaker.com/anti-decay-programming/">anti-decay programming</a>. </p><p>I wanted a <strong>single</strong> job enqueue at this code point, <strong>not a variable</strong> number of enqueues. So I enqueued the job with the environment and looped through the webhooks in the job like so:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class WebhookJob &lt; ApplicationJob
  queue_as :webhooks

  def perform(environment)
    environment.webhooks.enabled.find_each do |webhook|
      SyncWebhook.call(webhook)
    end
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>What if the webhook job performed, one webhook had a successful response and another a failed response? I would need to retry the failed one. I&apos;d like to make a best effort to <em>eventually</em> get a hook request to that end point.</p><p>If I let the job system handle the retry, then each webhook that succeeded would receive <strong>another</strong> webhook. I could change this job and make it enqueue one job per webhook. At least this keeps the <code>N+1</code> to the job system and out of any web request. </p><p>But what if there are 4 webhooks for this environment, 2 get enqueued and 2 don&apos;t because the job gets restarted for any number of reasons. When the job retries, it will enqueue 2 more jobs for the webhooks that already had jobs enqueued. </p><h3 id="at-least-once">At least once</h3><p>I don&apos;t need <strong>exactly once</strong> processing as it simply isn&apos;t <strong>worth the effort </strong>for this use case. I&apos;m going for at least once, with a duplicate here and there being ok. It&apos;s just a sync request. If we have a few extra syncs, no biggie. </p><p>But even if I created a webhook response in the first two jobs, they&apos;d have no way of knowing whether this is a new sync request or the previous one that was enqueued as a duplicate.</p><h3 id="shower-driven-development">Shower driven development</h3><p>In the &#x1F6BF; later that day, it hit me. I need an identifier. If I enqueue this job with a UUID and I store records of webhook requests with that UUID I can have <em>good enough</em> certainty to discard duplicates.</p><p>Enqueueing with the UUID is straightforward:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">require &quot;securerandom&quot;
WebhookJob.perform_later(environment, SecureRandom.uuid)
</code></pre>
<!--kg-card-end: markdown--><p>The changes to the job are minor:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class WebhookJob &lt; ApplicationJob
  queue_as :webhooks

  def perform(environment, uuid)
    environment.webhooks.enabled.find_each do |webhook|
      SyncWebhook.call(webhook, uuid: uuid)
    end
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>This <strong>tiny little unique identifier</strong> makes it <strong>far more easy</strong> to make background jobs <strong>idempotent</strong>. </p><p>I added a <code>delivered?</code> method on <code>Webhook</code>. </p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class Webhook
  has_many :responses, class_name: &quot;WebhookResponse&quot;, dependent: :destroy
  
  def delivered?(uuid)
    responses.where(delivery_id: uuid).exists?
  end
end
</code></pre>
<!--kg-card-end: markdown--><p><strong>Note</strong>: I also have a unique index on <code>webhook_id</code> and <code>delivery_id</code>. This prevents the duplicate from being stored.</p><p>And I can then use that method in <code>SyncWebhook</code> to determine if we really need to sync or if we already have a response. Again, this <strong>isn&apos;t perfect</strong> as it has a read then write race, but it is <strong>good enough</strong>.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">require &quot;securerandom&quot;

class SyncWebhook
  def self.call(webhook, uuid: SecureRandom.uuid)
    new(webhook, uuid: uuid).call
  end
  
  NOOP = GitHub::Result.new

  def initialize(webhook, uuid: SecureRandom.uuid)
    @webhook = webhook
    @uuid = uuid
  end

  def call
    return NOOP if webhook.delivered?(@uuid)

    # do the sync
  end
end
</code></pre>
<!--kg-card-end: markdown--><p><code>NOOP</code> is just a sentinel value so I can tell if a hook was actually fired or not. I&apos;d ignore it for now if I were you. </p><p>I can think of <strong>so many places</strong> this simple idea of enqueueing a job with an identifier would have been helpful. Not sure why it didn&apos;t occur to me before. Really <strong>any job that does more than one thing could benefit</strong> from this.</p><h3 id="time-to-party">Time to party </h3><p>I&apos;d be cheating you if that was all I showed for the sending, so I&apos;m going to leave the whole <code>SyncWebhook</code> class here for the curious. I&apos;ll add some comments to hopefully explain any parts that could cause confusion.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">require &quot;json&quot; # to encode the body
require &quot;httparty&quot; # because I like to party
require &quot;securerandom&quot;
# something similar to ActiveSupport::MessageVerifier 
# and Stripe&apos;s webhook verification. I added it 
# separately to avoid needing to pull either of those
# as dependencies.
require &quot;flipper/cloud/message_verifier&quot;

class SyncWebhook
  # convenience method at the class level
  def self.call(webhook, uuid: SecureRandom.uuid)
    new(webhook, uuid: uuid).call
  end

  # convenience reader methods
  attr_reader :webhook
  attr_reader :uuid
  attr_reader :timestamp

  # sentinel value for &quot;nothing happened&quot;
  NOOP = GitHub::Result.new

  # pretty stock initialize
  def initialize(webhook, uuid: SecureRandom.uuid)
    @webhook = webhook
    @uuid = uuid
    @timestamp = Time.now
  end

  # actually try to sync the hook
  def call
    # only sync if the policy is allowing it (aka they paying)
    return NOOP unless webhook.policy.sync?
    # no need to deliver if already delivered
    return NOOP if webhook.delivered?(uuid)

    # for tracking the duration
    start = now
    
    # its ok if this fails for now, we just want to wrap it up,
    # but now that i look at it, this should rescue with another
    # enqueue and a new uuid, maybe the old uuid as a parent uuid
    GitHub::Result.new {
      HTTParty.post(webhook.url, request_options)
    }.map { |response|
      # if the response succeeds, set the db attributes for code and headers
      webhook_response_attributes[:status] = response.code
      webhook_response_attributes[:headers] = response.headers
      response
    }.map { |response|
      # we return the Flipper registered groups in the hook 
      # endpoint so this ensures they exist for the environment
      create_groups(response.body) if response.code == 200
    }.rescue { |error|
      # if response fails then track the error in db, 
      # send to error tracking and return error
      webhook_response_attributes.update({
        error: {
          class: error.class.name,
          message: error.message[0..100],
          backtrace: error.backtrace.first(5)
        }
      })
      Raven.capture_exception(error)
      GitHub::Result.error(error)
    }
    # store duration so we know slow hooks
    webhook_response_attributes[:duration] = now - start

    # try to create the webhook response in the database
    GitHub::Result.new { webhook.responses.create!(webhook_response_attributes) }
  end

  private

  def webhook_response_attributes
    @webhook_response_attributes ||= {
      request_url: webhook.url,
      request_headers: request_headers,
      delivery_id: uuid,
    }
  end

  def now
    Process.clock_gettime(Process::CLOCK_MONOTONIC, :millisecond)
  end

  # Heavily rescued method with best effort of creating the groups in the
  # response body.
  #
  # This is very defensive as people can setup webhooks to anywhere and return
  # any response body they want.
  #
  # Returns GitHub::Result.
  def create_groups(response_body)
    GitHub::Result.new {
      JSON.parse(response_body)
    }.map { |data|
      if groups = data[&quot;groups&quot;]
        if groups.is_a?(Array)
          registered_groups = groups.map { |row| row.is_a?(Hash) ? row[&quot;name&quot;] : nil }.compact.uniq
          RegisterAppGroups.call(webhook.environment, registered_groups)
        end
      end
    }.rescue { |exception|
      Raven.capture_exception(exception)
      GitHub::Result.error(exception)
    }
  end

  # this and the next few methods just set some 
  # reasonable timeouts, we don&apos;t want to sit here
  # forever waiting on endpoints
  def read_timeout
    Integer(ENV[&quot;WEBHOOK_READ_TIMEOUT&quot;].presence || 10)
  end

  def open_timeout
    Integer(ENV[&quot;WEBHOOK_OPEN_TIMEOUT&quot;].presence || 10)
  end

  def connect_timeout
    Integer(ENV[&quot;WEBHOOK_CONNECT_TIMEOUT&quot;].presence || 10)
  end

  def message_verifier
    @message_verifier ||= Flipper::Cloud::MessageVerifier.new(secret: webhook.secret)
  end

  def signature
    @signature ||= message_verifier.generate(request_body, timestamp)
  end

  def header
    @header ||= message_verifier.header(signature, timestamp)
  end

  def request_headers
    @request_headers ||= {
      &quot;Content-Type&quot; =&gt; &quot;application/json&quot;,
      &quot;Flipper-Cloud-Signature&quot; =&gt; header,
    }
  end

  # sync! 
  def request_body
    @request_body ||= JSON.generate({
      &quot;environment_id&quot; =&gt; webhook.environment_id,
      &quot;webhook_id&quot; =&gt; webhook.id,
      &quot;delivery_id&quot; =&gt; uuid,
      &quot;action&quot; =&gt; &quot;sync&quot;,
    })
  end

  # add all the timeouts and details
  def request_options
    @request_options ||= {
      body: request_body,
      headers: request_headers,
      read_timeout: read_timeout,
      open_timeout: open_timeout,
      connect_timeout: connect_timeout,
    }
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>I think a case could be made to break this up into a few smaller classes (like all the http stuff). But my new life theme is <strong>good enough for now</strong>. </p><p>For more on why I&apos;m using <code>GitHub::Result</code> all over the place, check out <a href="https://www.johnnunemaker.com/resilience-in-ruby-shell-commands/">my resilience for ruby post</a>. Also, I&apos;ve previously written about the <code>RegisterAppGroups</code> class in my post covering <a href="https://www.johnnunemaker.com/rails-insert_all-and-upsert_all/">rails <code>insert_all</code> and <code>upsert_all</code></a>.</p><p>Now that <strong>sending hooks was working</strong>, it was time to add receiving. </p><h2 id="receiving-webhooks">Receiving Webhooks</h2><p>The receiving end of webhooks is all <a href="https://github.com/jnunemaker/flipper/pull/489">public</a> in <a href="https://github.com/jnunemaker/flipper">OSS flipper</a>. But I&apos;ll cover it here for thoroughness sake. Many people these days just create <a href="https://guides.rubyonrails.org/engines.html">Rails engines</a>. I&apos;d love to only do that. But doing only that means you leave out <a href="http://sinatrarb.com">Sinatra</a>, <a href="https://hanamirb.org">Hanami</a>, <a href="http://roda.jeremyevans.net">Roda</a> and friends.</p><p>I&apos;m not one to leave anyone out and <strong>we have a standard</strong> for stuff like this &#x2013; <a href="https://github.com/rack/rack">Rack</a>. My typical route is instead to create a middleware that is used by Rack apps that get <a href="https://api.rubyonrails.org/v6.1.3/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-mount">mounted in Rails routes</a> or <a href="https://github.com/rack/rack/blob/14a236b4f0899e46bc41c4f80dcff29159a59312/lib/rack/urlmap.rb">URL mapped</a> in rackup files for the rest. </p><p>This makes it so everything built on <code>Rack</code> can Just Work&#x2122;. And you can still add a Rails engine to mount the Rack app for automatic Rails support.</p><h3 id="the-middleware">The middleware</h3><p>The <a href="https://github.com/jnunemaker/flipper/blob/c1f5c17ba99a96bb307598fb82ff22932d134393/lib/flipper/cloud/middleware.rb">middleware for Flipper Cloud</a> receives a webhook request (from Cloud), validates the signature, and performs a sync. It also returns the groups as I mentioned above, so we can keep those in sync for you. That&apos;s it.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">require &quot;flipper/cloud/message_verifier&quot;

module Flipper
  module Cloud
    class Middleware
      # Internal: The path to match for webhook requests.
      WEBHOOK_PATH = %r{\A/webhooks\/?\Z}
      # Internal: The root path to match for requests.
      ROOT_PATH = %r{\A/\Z}

      def initialize(app, options = {})
        @app = app
        @env_key = options.fetch(:env_key, &apos;flipper&apos;)
      end

      def call(env)
        dup.call!(env)
      end

      def call!(env)
        request = Rack::Request.new(env)
        
        # backwards compatible stuff to make / and /webhooks work.
        if request.post? &amp;&amp; (request.path_info.match(ROOT_PATH) || request.path_info.match(WEBHOOK_PATH))
          status = 200
          headers = {
            &quot;Content-Type&quot; =&gt; &quot;application/json&quot;,
          }
          body = &quot;{}&quot;
          payload = request.body.read
          signature = request.env[&quot;HTTP_FLIPPER_CLOUD_SIGNATURE&quot;]
          flipper = env.fetch(@env_key)

          begin
            message_verifier = MessageVerifier.new(secret: flipper.sync_secret)
            if message_verifier.verify(payload, signature)
              # message is valid so let&apos;s do a sync
              begin
                # sync
                flipper.sync
                
                # return the groups in the response so cloud can pull them
                body = JSON.generate({
                  groups: Flipper.group_names.map { |name| {name: name}}
                })
              rescue Flipper::Adapters::Http::Error =&gt; error
                # if we received an error, check if payment is 
                # issue or something else
                status = error.response.code.to_i == 402 ? 402 : 500
                headers[&quot;Flipper-Cloud-Response-Error-Class&quot;] = error.class.name
                headers[&quot;Flipper-Cloud-Response-Error-Message&quot;] = error.message
              rescue =&gt; error
                status = 500
                headers[&quot;Flipper-Cloud-Response-Error-Class&quot;] = error.class.name
                headers[&quot;Flipper-Cloud-Response-Error-Message&quot;] = error.message
              end
            end
          rescue MessageVerifier::InvalidSignature
            status = 400
          end

          [status, headers, [body]]
        else
          @app.call(env)
        end
      end
    end
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Not the prettiest of code. But as I age, I&apos;d like to think that I&apos;m a little better at letting working code that isn&apos;t the cleanest sneak into production. Reality is the <a href="https://speakerdeck.com/bkeepers/the-world-runs-on-bad-software">world runs on dirty code</a> and that middleware is probably in the top 1% of beautiful code despite its length.</p><h3 id="the-rack-app">The Rack app </h3><p>Cloud has an <a href="https://github.com/jnunemaker/flipper/blob/c1f5c17ba99a96bb307598fb82ff22932d134393/lib/flipper/cloud.rb#L24-L38"><code>app</code> method</a> for building the Rack app that you can then easily mount in your routes (for Rails) or url map in your rackup (for alternative frameworks).</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">module Flipper
  module Cloud
    def self.app(flipper = nil, options = {})
      env_key = options.fetch(:env_key, &apos;flipper&apos;)
      memoizer_options = options.fetch(:memoizer_options, {})

      app = -&gt;(_) { [404, { &apos;Content-Type&apos;.freeze =&gt; &apos;application/json&apos;.freeze }, [&apos;{}&apos;.freeze]] }
      builder = Rack::Builder.new
      yield builder if block_given?
      builder.use Flipper::Middleware::SetupEnv, flipper, env_key: env_key
      builder.use Flipper::Middleware::Memoizer, memoizer_options.merge(env_key: env_key)
      builder.use Flipper::Cloud::Middleware, env_key: env_key
      builder.run app
      klass = self
      builder.define_singleton_method(:inspect) { klass.inspect } # pretty rake routes output
      builder
    end
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>The <code>app</code> method is mostly boring &#x2013; just building up a <code>Rack::Builder</code> instance. But you can see on line 12 where it uses the middleware. </p><p>You can then use it by mounting it in your Rails routes.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">Rails.application.routes.draw do
  mount Flipper::Cloud.app, at: &quot;_flipper&quot;
end
</code></pre>
<!--kg-card-end: markdown--><p>This adds an endpoint for your app at <code>yourapp.com/_flipper</code> (or wherever you mounted it).</p><h2 id="wrap-up">Wrap Up</h2><p>So there you have it. This post covered:</p><ul><li>managing webhooks</li><li>finding the point in your code where you&apos;ll need to send the webhook</li><li>how to party when actually sending the webhook</li><li>how to receive the webhook on the other side</li></ul><p>This is definitely a <strong>first iteration</strong> and <strong>will harden over time</strong> as all good production code does. But so far it has been working great. Nearly all of our customers are using hooks and we haven&apos;t had any problems to date. </p><p>Welp. That was another long one &#x2013; a common theme here of late. But I hope <strong>you enjoyed it</strong> and <strong>maybe learned</strong> a little something. It took me around <strong>3+</strong> hours to write.</p><p>If you did enjoy or learn anything, you should probably check out <a href="https://www.flippercloud.io/"><strong>Flipper Cloud</strong></a>. Sign up, kick the tires and let me know what you think. I crave feedback.</p><p><strong>P.S.</strong> It is worth noting that I don&apos;t yet have backoff in retries or automatic disabling of failing hooks or all the other things that would be good. As I need and create these systems, I&apos;ll do my best to write them up as well.</p><p><strong>P.P.S.</strong> If you&apos;d like to see the functioning of this system in production from end to end, check out this one minute video.</p><figure class="kg-card kg-embed-card"><iframe width="200" height="113" src="https://www.youtube.com/embed/aV6DkfdFOT0?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></figure>]]></content:encoded></item><item><title><![CDATA[Rails: How to Reduce Friction at the Authorization Layer]]></title><description><![CDATA[💡 That's when it hit me. Yes or no are core to authorization. But what if I also included why?]]></description><link>https://www.johnnunemaker.com/rails-authorization/</link><guid isPermaLink="false">60453b3b5d72d300395b274e</guid><category><![CDATA[rails]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Mon, 15 Mar 2021 12:49:46 GMT</pubDate><content:encoded><![CDATA[<p>It all started so innocently. I knew that I wanted something to organize authorization for <a href="https://www.flippercloud.io">Flipper Cloud</a>. But I wasn&apos;t sure what. <a href="https://github.com/varvet/pundit">Pundit</a>? Why not. </p><p>I started slapping policies in and peeling out. Over time though, I noticed the same things that I notice on every app I work on &#x2013; entropy and friction at the authorization layer.</p><p><a href="https://orderedlist.com">Steve</a> and I were chatting about it one day over a <a href="https://screen.so">screen</a> pairing session and he said something to the effect of &quot;Hey, wouldn&apos;t it be nice if we had a message in addition to true/false.&quot; &#x1F4A1;</p><p>Yeah, yeah that would be real nice Steve. And you know what, that would be real possible too. So I started pulling at the string and pretty soon I had this big, beautiful ball of &#x1F9F6; that was the envy of every &#x1F408; around.</p><p>I&apos;ve shared snippets of it with friends and they seemed pretty interested, so why not a full on blurgh post.</p><h2 id="authorization-rest">Authorization != REST</h2><p>The first string I pulled was the awkwardness of policy names matching REST actions (e.g. index, create and show). This is Ruby. <strong>Ruby is a conversation</strong>. </p><p><code>policy(organization).view_members?</code> is a conversation. <code>policy(User).index?</code> is not. </p><p><code>policy(Project.new).create?</code> knows nothing other than the type of instance it is. <code>policy(organization).create_project?</code> knows a lot more. </p><p>Here I passed in a class. There I passed in an instance of a class. Some of those instances were persisted records. Others were not. </p><p>I couldn&apos;t keep it straight. Do I need to check <code>new_record?</code> or <code>persisted?</code> here or not? &#xA0;Am I dealing with a class or an instance of a class?</p><h3 id="incongruence">Incongruence</h3><p><strong>I felt incongruence</strong>. Incongruence isn&apos;t always obvious. <strong>But you feel it</strong>. Deep in your programmer bones you feel it. </p><p>Notice how some code just feels right and you rock and roll and are on top of the world? But other code requires you to continually re-check a file for the name of a method or parameter or what type of object you are dealing with? </p><p>That is incongruence. If it isn&apos;t flowing, that means the code is showing (I rhyme all the thyme). Its showing you that something is not right. That is what I kept feeling. </p><p>So that was step #1. It might feel minor, but for me it opened up the flood gates of authorization. </p><h3 id="adios-in-memory">Adios in-memory</h3><p>I changed code like this:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">if policy(@organization.projects.new).create?
</code></pre>
<p>To code like:</p>
<pre><code class="language-ruby">if policy(@organization).create_project?
</code></pre>
<p>Oooh, that feels nice &#x1F60E;. Just like that all-my in memory objects were gone. Again, such a small thing, but something just felt right.</p>
<!--kg-card-end: markdown--><h3 id="adios-classes">Adios classes</h3><!--kg-card-begin: markdown--><p>I didn&apos;t stop there though. Next I swapped out code like:</p>
<pre><code class="language-ruby">if policy(OrganizationMembership).index?
</code></pre>
<p>For something more readable and enforceable like:</p>
<pre><code class="language-ruby">if policy(organization).view_members?
</code></pre>
<!--kg-card-end: markdown--><p>Every object passed into a policy was a persisted instance. Congruence! </p><h2 id="conquer-the-repetition">Conquer the Repetition</h2><p>The next string that I tugged on was all the repetition of checking organization or project membership. Most policies had something like this in them:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class TokenPolicy &lt; ApplicationPolicy
  def show?
    project_member?
  end
  
  def update?
    project_member?
  end
  
  def destroy?
    project_member?
  end
  
  private 
  
  def project_member?
    record.project.member?(user)
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Solving this was mostly delegation plus extract method to superclass. I made sure that every object under the umbrella of a <em>Project</em> or an <em>Organization</em> delegated up the chain.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class Environment &lt; ApplicationRecord
  delegate :organization, to: :project
end

class Feature &lt; ApplicationRecord
  delegate :organization, to: :project
end

class Gate &lt; ApplicationRecord
  delegate :project, to: :feature
  delegate :organization, to: :project
end

class Webhook &lt; ApplicationRecord
  delegate :project, to: :environment
  delegate :organization, to: :project
end
</code></pre>
<p>Doing this made it so that <code>project_member?</code> could move up to <code>ApplicationPolicy</code>:</p>
<pre><code class="language-ruby">class ApplicationPolicy
  def project_member?
    record.project.member?(user)
  end
  
  def organization_member?
    record.organization.member?(user)
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Things were starting to feel better. The permissions were more <strong>descriptive </strong>(not REST) and <strong><a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself">DRY</a></strong>. <strong>But something still didn&apos;t feel right</strong>. </p><h2 id="the-message">The Message</h2><p>The core of Pundit, or most authorization related code, is can someone do something &#x2013; <code>true</code> or <code>false</code>. But neither <code>true</code> nor <code>false</code> tell the whole story. </p><p>Any designer or developer worth a lick will typically let a software user know <em>why</em> they aren&apos;t allowed to do something. This is really what Steve was getting at in our conversation at the beginning of this post. Sorry for taking so long to get to the &#x1F356;. </p><h3 id="predicate-methods">Predicate Methods</h3><p>The message of why a user can&apos;t do a thing was the tricky part. My code was littered with <code>create_project?</code>, <code>invite?</code> and other predicate methods.</p><p>Predicate methods in Ruby always return <code>true</code> or <code>false</code>. To return some other object (that had <code>message</code> and <code>result</code>) would be confusing. It would require every developer who works on this project to learn something new and totally different than idiomatic Ruby. </p><p>No, that just wouldn&apos;t work. So what was I to do? </p><p>What if each predicate method had a companion method that wasn&apos;t a predicate and returned some sort of result object. </p><p>That method could also be memoized and re-used in the predicate method. Memoizing would avoid incurring a duplicate check of authorization for a single predicate check and output of a message. </p><p>Let&apos;s look at a sample:</p><!--kg-card-begin: markdown--><pre><code class="language-erb">&lt;% if user_policy.create_organization? %&gt;
  &lt;%= link_to &quot;Add an Organization&quot;, [:new, :organization] %&gt;
&lt;% else %&gt;
  &lt;span title=&quot;&lt;%= user_policy.create_organization.message %&gt;&quot; data-toggle=&quot;tooltip&quot;&gt;
    Add an Organization
  &lt;/span&gt;
&lt;% end %&gt;
</code></pre>
<!--kg-card-end: markdown--><p>I mean that reads ok, right? If the <code>user_policy</code> can create an organization, then the <em>Add an Organization</em> link is shown. If it cannot, then I instead show a tooltip with a title explaining <strong>why</strong> an organization cannot be created. </p><p><strong>No more running checks in policies </strong>and<strong> then running checks again</strong> in a controller or view to figure out why a given policy was false. </p><p><strong>No more generic messages</strong> like &quot;<em>You do not have permission to do this</em>.&quot; </p><p><strong>Because we have an exact message</strong> for why the authorization failed, we can tell the user exactly why. </p><h3 id="the-code-migration">The Code Migration</h3><p>So I slapped a DSL in <code>ApplicationPolicy</code> that made it easy to define both methods at once. </p><p>The best part? Because the predicate methods all stayed the same, <strong>no view </strong>or<strong> other code had to change immediately</strong>. </p><p>Over time, I picked spots where having more information on why a user couldn&apos;t do something would be more valuable and started using the predicate and non-predicate method calls in combination to provide more information.</p><h2 id="the-dsl">The DSL</h2><p>I know, I know, you just want to see my <code>instance_eval</code>, <code>catch</code> / <code>throw</code> and other terrible things. </p><p>But before we get to that, can we just admire this:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class ProjectPolicy &lt; ApplicationPolicy
  policy :show, :update, :destroy, :view_features, :view_members, :view_environments, :create_environment do
    require_project_membership!
  end

  policy :create_feature do
    require_project_membership!
    require_subscription_access! message: &quot;Creating a feature requires a trial or subscription.&quot;
  end

  policy :invite do
    require_confirmed_user! message: &quot;Inviting collaborators is disabled until you verify your account by email.&quot;
    require_organization_membership! message: &quot;Only organization members can invite collaborators.&quot;
  end

  policy :cancel_invite do
    require_organization_membership! message: &quot;Only organization members can cancel invitations.&quot;
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Maybe I&apos;m just too familiar with this <em>because I wrote it.</em> </p><p>But I&apos;m pretty sure you can <strong>read the code</strong> above and <strong>understand the permissions</strong> for managing projects in <a href="https://www.flippercloud.io">Flipper Cloud</a> &#x2013; even if you aren&apos;t sure how to use it. </p><h3 id="the-response-object">The Response Object</h3><p>The first layer of this ball of yarn is a <code>PolicyResponse</code> class. This is what is returned by the non-predicate method and wraps up all the data we&apos;ll need.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class PolicyResponse
  attr_reader :reason, :message

  REASON_TO_MESSAGE = {
    organization_membership_required: &quot;You must be an organization member.&quot;,
    project_membership_required: &quot;You must be a project collaborator or an organization member.&quot;,
    subject_memberbership: &quot;You must be a project collaborator or an organization member.&quot;,
    subscription_required: &quot;You must have a subscription.&quot;,
    anonymous_user: &quot;You must be signed in.&quot;,
    unconfirmed_user: &quot;You must have a confirmed email address.&quot;,
  }.freeze

  def self.true(reason = nil, message = nil)
    new(true, reason, message)
  end

  def self.false(reason = nil, message = nil)
    new(false, reason, message)
  end

  def initialize(value, reason = nil, message = nil)
    @value = value
    @reason = reason
    @message = message
  end

  def can?
    @value
  end

  def cannot?
    !can?
  end

  def title
    @title ||= (@reason.to_s.presence || &quot;Whoops!&quot;).humanize
  end

  def message
    @message_text ||= @message.presence || REASON_TO_MESSAGE.fetch(@reason, &quot;You are not authorized.&quot;)
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Nothing fancy. There is a <code>value</code>, a <code>reason</code> and a <code>message</code>. The value is <code>true</code>/<code>false</code>. The <code>reason</code> is typically a short hand symbol representation of &quot;why not?&quot; when the <code>value</code> is <code>false</code>. Lastly, the <code>message</code> is a more human friendly version of the <code>reason</code>.</p><p>You might have also noticed I added a couple of factories (is that the right fancy enterprise programmer lingo?) at the top for <code>true</code> and <code>false</code> responses and some default <code>message</code> values based on the <code>reason</code>. These are all just to save me a few key strokes when defining policies.</p><h3 id="the-dsl-method">The DSL Method </h3><p>The next layer on this path to <em>authorization bliss</em> was a tiny DSL in <code>ApplicationPolicy</code>.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class ApplicationPolicy
  extend Memoist

  # Define a new policy and the predicate method.
  #
  # Example:
  #   policy :show do
  #     PolicyResponse.new project_member?, :project_membership_required
  #   end
  #
  # Returns nothing.
  def self.policy(*names, &amp;block)
    names.each do |name|
      define_method(name) do
        catch(:halt) { instance_eval(&amp;block) }
      end
      memoize name

      define_method(&quot;#{name}?&quot;) do
        send(name).can?
      end
    end
    nil
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>There it is. Yep, <code>catch</code>, <code>instance_eval</code>, <code>memoize</code> and all kinds of other <em>shameless tactics</em> to reduce friction and start to enjoy authorization again. I really threw the kitchen sink at this.</p><p>Anyway, this adds a class method that I can then use in subclasses to define policy methods. This is akin to how <code>belongs_to</code>, <code>has_many</code> and other Active Record methods exist in your models. </p><p>I should also note that <a href="https://github.com/matthewrudy/memoist">Memoist</a> is gem I often use. It is <code>extend</code>ed here which adds the <code>memoize</code> method used in the class method.</p><p>You already saw how the policy class method works (at the opening of this section), but didn&apos;t know where it came from. </p><p>Here&apos;s a short example as a refresher:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class ProjectPolicy &lt; ApplicationPolicy
  policy :update, :destroy, :view_features, :view_members, :view_environments, :create_environment do
    if project_member?
      PolicyResponse.true
    else 
      PolicyResponse.false :project_membership
    end
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Policy methods that share permissions can be defined together. That means in the aforementioned example that <code>update</code>, <code>destroy</code>, <code>view_features</code>, <code>view_members</code>, <code>view_environments</code>, and <code>create_environment</code> all share the same permission check.</p><p>Inside the block you can do whatever Ruby you need to determine if a user is able to do something or not. The only requirement is that a <code>PolicyResponse</code> is returned.</p><h3 id="pour-some-sugar-on-it">Pour some sugar on it </h3><p>Pretty much immediately I got tired of repeating <code>if</code>/<code>else</code> and returning <code>PolicyResponse</code> instances. So I added a few more methods to <code>ApplicationPolicy</code> to DRY up the repeated permissions.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class ApplicationPolicy

  # [snipped for brevity]

  private

  def has_subscription_access?
    record.organization.has_subscription_access?
  end

  def organization_member?
    record.organization.member?(user)
  end

  def project_member?
    record.project.member?(user)
  end

  def require_confirmed_user!(message: nil)
    require_signed_in_user!
    deny! :unconfirmed_user, message unless user.confirmed?
    PolicyResponse.true
  end

  def require_signed_in_user!(message: &quot;You must be signed in.&quot;)
    deny! :anonymous_user, message if anonymous_user?
    PolicyResponse.true
  end

  # Only allow if organization has subscription access.
  def require_subscription_access!(message: nil)
    deny! :subscription_required, message unless has_subscription_access?
    PolicyResponse.true
  end

  # Only allow project members.
  def require_project_membership!(message: nil)
    require_signed_in_user!
    deny! :project_membership_required, message unless project_member?
    PolicyResponse.true
  end

  # Only allow organization members.
  def require_organization_membership!(message: nil)
    require_signed_in_user!
    deny! :organization_membership_required, message unless organization_member?
    PolicyResponse.true
  end

  # Wherever we are at in the decision process, stop and allow access.
  def allow!
    halt! PolicyResponse.true
  end

  # Wherever we are at in the decision process, stop and deny access.
  def deny!(reason, message = nil)
    halt! PolicyResponse.false(reason, message)
  end

  # Stop trying to figure out if someone can or cannot do something and just
  # return this policy response.
  def halt!(policy_response)
    throw :halt, policy_response
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Thanks to the delegation (covered a few sections ago) and stolen <code>catch</code> / <code>throw</code> from Sinatra (<a href="https://github.com/sinatra/sinatra/blob/936ea0b1a5674b8278ccba5b4cbc5e7dcf512e68/lib/sinatra/base.rb#L1102">source</a>), my policies started bringing me joy. </p><p>Enough joy that I&apos;m writing this here post for you. That doesn&apos;t usually happen when I write &#xA0;authorization code.</p><p>The previous project membership check could now be expressed as:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class ProjectPolicy &lt; ApplicationPolicy
  policy :update, :destroy, :view_features, :view_members, :view_environments, :create_environment do
    require_project_membership!
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>With the <code>PolicyResponse</code> object, the class method and the accompanying helpers I can whip together permissions really easily now. </p><h3 id="sharing-and-customizing">Sharing and Customizing</h3><p>I also ensured that policies could be re-used within a method. </p><p>For example, I wanted most of the permissions for gates (the ways to <code>enable</code> / <code>disable</code> a feature) to be the same. But I wanted an <strong>extra limit</strong> on the number of actors or groups enabled for a feature to avoid mis-use.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class FeatureWithEnvironmentPolicy &lt; ApplicationPolicy
  policy :manage_gates do
    require_subscription_access!
    require_project_membership!
  end
  
  policy :clear, :mirror, :enable, :disable, :disable_actor, :disable_group, :set_percentage_of_actors, :set_percentage_of_time do
    # All of these individual gate operations should also check manage gates.
    # Think of manage gates as a super permission check that has to be passed
    # first. Then, any specific gate permission checks have to pass too.
    manage_gates
  end

  policy :enable_actor do
    if record.flipper_feature.actors_value.size &gt;= Limit.actors_count_limit
      deny! :actor_limit, &quot;This feature has reached the limit to the number of actors per feature. Check out groups as a more flexible way to enable many actors.&quot;
    end

    manage_gates
  end

  policy :enable_group do
    if record.flipper_feature.groups_value.size &gt;= Limit.groups_count_limit
      deny! :group_limit, &quot;This feature has reached the limit to the number of groups per feature.&quot;
    end

    manage_gates
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>&#x1F4A5; All feature gate changes are controlled by <code>manage_gates</code>. But <code>enable_actor</code> and <code>enable_group</code> do an extra check for the set size.</p><p>Vanilla pundit can even be used in the controller via the authorize method.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class GatesController &lt; ApplicationController
  def enable
    authorize @feature_with_environment, :enable?
    @flipper_feature.enable
    redirect_to [current_organization, @project, @environment, @feature]
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Because authorization became so easy and flexible, I started using the policies in new ways. Check out this <code>:api</code> policy method I added to the <code>TokenPolicy</code>. </p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class TokenPolicy &lt; ApplicationPolicy
  policy :api do
    deny! :not_found, &quot;Environment could not be found.&quot; unless record.environment
    deny! :not_found, &quot;Project could not be found.&quot; unless record.project
    deny! :not_found, &quot;Organization could not be found.&quot; unless record.organization

    require_subscription_access! message: &quot;Using the API requires a trial or subscription access. Visit: #{Rails.application.routes.url_helpers.organization_subscription_url(record.organization)}&quot;

    unless record.enabled?
      deny! :disabled, &quot;Disabled tokens cannot access the API.&quot;
    end

    PolicyResponse.true
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Then, in a middleware before every API request, the policy is checked:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">policy = token.policy.api
unless policy.can?
  if policy.reason == :subscription_required
    return error_response(request, 402, policy.message)
  else
    return not_found(request, policy.message)
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Note that I customize the response code based on the <code>reason</code>. If I&apos;m dealing with a subscription issue, I can return a payment required status code. </p><h2 id="wrapping-up">Wrapping Up</h2><p>Is any of the above a perfect abstraction? No. But it <strong>removed the friction</strong> I was feeling <strong>to the point that I was excited</strong> to show boring policies to friends, and to you dear reader.</p><p>I think the TLDR is that vanilla pundit, a mindset change, and a wee bit of code &#xA0;authorization moved from <em>annoying</em> to <strong>empowering</strong>. </p><p>Whew. That was a long one, but I hope you enjoyed it and maybe learned a little something. It took me around <strong>4+</strong> hours to write. </p><p>If you did enjoy or learn anything, you should probably check out <a href="https://www.flippercloud.io">Flipper Cloud</a>. Sign up, kick the tires and let me know what you think. I crave feedback. </p>]]></content:encoded></item><item><title><![CDATA[Slow & Steady: Building Products for Fun & Profit]]></title><description><![CDATA[Another week, another podcast for ya to listen to: taking on behemoths, standardizing tech across multiple products, getting acquired by GitHub (over a handshake), acquiring Speaker Deck back from GitHub, and more.]]></description><link>https://www.johnnunemaker.com/slow-steady/</link><guid isPermaLink="false">6048c764cb6c5f0039faf06b</guid><category><![CDATA[podcast]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Wed, 10 Mar 2021 13:38:50 GMT</pubDate><content:encoded><![CDATA[<!--kg-card-begin: html--><iframe width="100%" height="180" frameborder="no" scrolling="no" seamless src="https://share.transistor.fm/e/d4221f86"></iframe><!--kg-card-end: html--><p>&#x1F399; Another week, another podcast for ya to listen to:</p><ul><li>more billing slapping</li><li>taking on behemoths</li><li>consulting to support product work</li><li>standardizing tech across multiple products</li><li>getting acquired by GitHub (over a handshake)</li><li>starting a side hustle while at a big company</li><li>acquiring <a href="https://speakerdeck.com">Speaker Deck</a> back from GitHub</li></ul><p>This episode is action packed. Hope you enjoy it! </p>]]></content:encoded></item><item><title><![CDATA[Resilience in Ruby: Shell Commands]]></title><description><![CDATA[Over the past year I've made myself real friendly with GitHub::Result and I'm loving it. This post is a big intro on how to make your Ruby code more resilient with GitHub::Result leading the way.]]></description><link>https://www.johnnunemaker.com/resilience-in-ruby-shell-commands/</link><guid isPermaLink="false">5ff5bec55afe79003938dec3</guid><category><![CDATA[programming]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Sat, 06 Mar 2021 01:36:05 GMT</pubDate><content:encoded><![CDATA[<p>This post is <strong>half</strong> a gentle nudge that you should be using <code><a href="https://github.com/github/github-ds#githubresult">GitHub::Result</a></code> more often and <strong>half</strong> a continuation of my <a href="https://www.johnnunemaker.com/resilience-in-ruby/">Resilience in Ruby</a> and <a href="https://www.johnnunemaker.com/limit-everything-timeouts-for-commands-in-ruby/">Limit Everything: Timeouts for Shell Commands in Ruby</a> posts. You can read this post and get value without reading those, but <strong>if you really want to dig in, I&apos;d read them first</strong>.</p><p>Adding timeouts to <a href="https://speakerdeck.com">Speaker Deck</a>&apos;s shell commands (as discussed in the aforementioned limit everything post) was a great start. <strong>But that wasn&apos;t enough</strong>. The code was not re-usable and definitely not aesthetically pleasing. </p><p>Last night I watched <a href="https://www.semicolonandsons.com">Semicolon &amp; Sons</a> <a href="https://youtu.be/vw7PlBvLq9k">Rails Best Practices</a> video (it&apos;s great, you should watch it). One <a href="https://youtu.be/vw7PlBvLq9k?t=1043">note</a> that stuck with me was:</p><blockquote>Programmers like me who work on a large variety of projects can greatly improve their productivity by writing their code in a way that it can be copied and pasted into another project and, more or less, just work.</blockquote><p>I think that sums up this next step in resilience for shell commands &#x2013; improving ease of reuse. In this case, I&apos;m talking ease of reuse in the same project. But most of this is generic enough it could easily be reused on another project as Jack advocated for.</p><h2 id="the-foundation">The Foundation</h2><p>First, let&apos;s start with the foundation, from which all the other commands are built. It&apos;s pretty simple:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">module SpeakerDeckCommand
  class Error &lt; StandardError; end
  class Timeout &lt; Error; end

  module_function

  def call(command, options = {})
    GitHub::Result.new {
      child = POSIX::Spawn::Child.build(*command, options)

      begin
        child.exec!
      rescue POSIX::Spawn::TimeoutExceeded
        raise Timeout, child.inspect
      end

      if child.success?
        child
      else
        raise Error, child.inspect
      end
    }
  end
end

</code></pre>
<!--kg-card-end: markdown--><p>Sure, this should be generalized to <code>Command</code> or <code>ShellCommand</code>, but this simple layer that wraps each <code>POSIX::Spawn</code> command in a <code>GitHub::Result</code> makes chaining shell commands fantastically smooth. </p><p>If you are new to <code>GitHub::Result</code>, you might be fine reading this, but not quite sure how to use it. Let&apos;s read through a few examples quick so you are up to speed.</p><!--kg-card-begin: markdown--><p>Calling a command returns a <code>GitHub::Result</code>:</p>
<pre><code class="language-ruby">SpeakerDeckCommand.call([&quot;echo&quot;, &quot;hello&quot;]) # =&gt; GitHub::Result
</code></pre>
<p>The result knows if it is ok:</p>
<pre><code class="language-ruby">SpeakerDeckCommand.call([&quot;echo&quot;, &quot;hello&quot;]).ok? # =&gt; true
</code></pre>
<p>The result also knows if it is NOT ok (assuming you don&apos;t have a &quot;nope&quot; &#x1F602;):</p>
<pre><code class="language-ruby">SpeakerDeckCommand.call([&quot;nope&quot;]).ok? # =&gt; false
</code></pre>
<p>The result has a value. In this case, the value is the posix spawn child instance:</p>
<pre><code class="language-ruby">SpeakerDeckCommand.call([&quot;echo&quot;, &quot;hello&quot;]).value!
=&gt; #&lt;POSIX::Spawn::Child:0x00007ff25b906a28
 @argv=[[&quot;echo&quot;, &quot;echo&quot;], &quot;hello&quot;],
 @env={},
 @err=&quot;&quot;,
 @input=nil,
 @max=nil,
 @options={},
 @out=&quot;hello\n&quot;,
 @pid=30396,
 @runtime=0.001821,
 @status=#&lt;Process::Status: pid 30396 exit 0&gt;,
 @timeout=nil&gt;
</code></pre>
<p>But when there is an error, <code>value!</code> will raise:</p>
<pre><code class="language-ruby">SpeakerDeckCommand.call([&quot;nope&quot;]).value!
Errno::ENOENT: No such file or directory - when spawning &apos;nope&apos;
</code></pre>
<p>But remember you can check if it is <code>ok?</code> prior to calling <code>value!</code>:</p>
<pre><code class="language-ruby">result = SpeakerDeckCommand.call([&quot;nope&quot;])
if result.ok?
  puts result.value!
else  
  puts &quot;Boooooo&quot;
end  
# outputs: Boooooo
</code></pre>
<p>Or, if you prefer, you can provide a default by using <code>value</code> with a block:</p>
<pre><code class="language-ruby">SpeakerDeckCommand.call([&quot;nope&quot;]).value { &quot;Boooooo&quot; } # =&gt; &quot;Boooooo&quot;
</code></pre>
<p>Please note how that code reads much more cleanly (IMO) compared to:</p>
<pre><code class="language-ruby">begin
  # assuming this raises error instead of returning GitHub::Result
  SpeakerDeckCommand.call([&quot;nope&quot;])
rescue =&gt; err
  &quot;Boooooo&quot;
end
</code></pre>
<!--kg-card-end: markdown--><p>But the goodness doesn&apos;t stop there. Have you ever used a <code>begin</code> / <code>rescue</code> in a view? Ugh. The humanity. It&apos;s terrible right? </p><p>Well <code>GitHub::Result</code>s aren&apos;t terrible in views. You can very easily use them with defaults on error or a normal <code>if</code> / <code>else</code> that informs the user of the problem.</p><p>This might seem like a small change moving from <code>begin</code> / <code>rescue</code> to <code>GitHub::Result</code> + <code>value</code> or <code>if</code> / <code>else</code>. But I&apos;ve found it to have pretty huge ramifications in making it easier to build resilient Ruby calls that retain the aesthetic we all know and love in Ruby-land.</p><h2 id="the-first-floor">The First Floor</h2><p>Now that we have the foundation of easily shelling out commands and handling failure, its time to layer on top specific shell commands. </p><p>One piece of software Speaker Deck uses is imagemagick. For example, let&apos;s say we want to get the dimensions of an image using <a href="https://imagemagick.org">imagemagick</a>. </p><!--kg-card-begin: markdown--><p>First, we can whip together an ImageMagick module:</p>
<pre><code class="language-ruby">module ImageMagick
  module_function

  def dimensions(options = {})
    path = options.fetch(:path).to_s

    command = [
      SpeakerDeck.identify_bin,
      &quot;-format&quot;, &quot;%wx%h&quot;,
      path,
    ]

    SpeakerDeckCommand.call(command, timeout: SpeakerDeck.identify_timeout).map { |child|
      child.out.to_s.strip.split(&apos;x&apos;).map(&amp;:to_f)
    }
  end
end
</code></pre>
<p>Using this module, we can now easily get the dimensions of an image:</p>
<pre><code class="language-ruby">ImageMagick.dimensions({
  path: &quot;/Users/jnunemaker/Dropbox/Pictures/me/beard.jpg&quot;,
})
# =&gt; #&lt;GitHub::Result:0x3ff93c757a04 value: [750.0, 1000.0]&gt;
</code></pre>
<p>Easy peasy &#x1F34B; squeezy, right? Let&apos;s do the same thing for an image that doesn&apos;t exist:</p>
<pre><code class="language-ruby">ImageMagick.dimensions({
  path: &quot;/Users/jnunemaker/Dropbox/Pictures/me/chin.jpg&quot;,
})
# =&gt; #&lt;GitHub::Result:0x3ff92dccafa4 
  error: #&lt;SpeakerDeckCommand::Error: #&lt;POSIX::Spawn::Child:0x00007ff25b995de0 
    @env={}, 
    @argv=[[&quot;identify&quot;, &quot;identify&quot;], &quot;-format&quot;, &quot;%wx%h&quot;, &quot;/Users/jnunemaker/Dropbox/Pictures/me/chin.jpg&quot;], 
    @options={}, 
    @input=nil, 
    @timeout=10, 
    @max=nil, 
    @pid=31214, 
    @err=&quot;identify: unable to open image &apos;/Users/jnunemaker/Dropbox/Pictures/me/chin.jpg&apos;: No such file or directory @ error/blob.c/OpenBlob/3537.\n&quot;, 
    @out=&quot;&quot;, 
    @runtime=0.019673, 
    @status=#&lt;Process::Status: pid 31214 exit 1&gt;&gt;&gt;&gt;
</code></pre>
<p>Hey! We have a result with an error. But please note that nothing &#x1F4A5; in our face.</p>
<pre><code class="language-ruby">ImageMagick.dimensions({
  path: &quot;/Users/jnunemaker/Dropbox/Pictures/me/chin.jpg&quot;,
}).ok? # =&gt; false
</code></pre>
<p>See? How does this all work? Well, if you take a peak back at the <code>ImageMagick.dimensions</code> code above, you&apos;ll notice this tiny little method call <code>map</code>.</p>
<p>You might think:</p>
<blockquote>
<p>Oh! I recognize that from using map on Enumerable&#xA0;objects.</p>
</blockquote>
<p>Yep! But this <code>map</code> is even doper. It will only be invoked if the result is ok. If the result is a failure, <code>map</code> is never invoked.</p>
<pre><code class="language-ruby">SpeakerDeckCommand.call([&quot;nope&quot;])
  .map { |value| raise &quot;this won&apos;t be invoked&quot; }
  .error
=&gt; #&lt;Errno::ENOENT: No such file or directory - when spawning &apos;nope&apos;&gt;
</code></pre>
<!--kg-card-end: markdown--><p>&#x1F60E; AMIRITE? <strong>The error is the first nope</strong>, not the <code>raise</code> in <code>map</code>. Again, this may seem tiny, but all of this is building toward the roof top patio where it is always sunny.</p><h2 id="the-second-floor">The Second Floor</h2><p>Ok, we have a solid foundation. Our main living floor is getting pretty sick. Time to layer on a second floor with bedrooms you can&apos;t stay awake in and luxury bathrooms (including bidets and those honeymoon bathtubs) for all.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">module ImageMagick
  module_function

  def resize(options = {})
    path = options.fetch(:path).to_s
    output_path = options.fetch(:output_path, path).to_s
    max_width = options.fetch(:width)

    dimensions(path: path).then { |width, height|
      if width &lt; max_width
        GitHub::Result.new { :noop }
      else
        SpeakerDeckCommand.call(
          [SpeakerDeck.convert_bin, path, &quot;-resize&quot;, max_width.to_s, output_path]
        )
      end
    }
  end
end
</code></pre>
<p>Ok, so now we have a <code>resize</code> method. The cool thing is this <code>resize</code> method only resizes if the image exists and the image width is greater than a provided max width.</p>
<pre><code class="language-ruby">ImageMagick.resize({
  path: &quot;/Users/jnunemaker/Dropbox/Pictures/me/beard.jpg&quot;, 
  output_path: &quot;/tmp/beard_smaller.jpg&quot;,
  width: 200,
})
# =&gt; #&lt;GitHub::Result:0x3ff93c85b978 value: #&lt;POSIX::Spawn::Child:0x00007ff2790b6df0 @env={}, @argv=[[&quot;convert&quot;, &quot;convert&quot;], &quot;/Users/jnunemaker/Dropbox/Pictures/me/beard.jpg&quot;, &quot;-resize&quot;, &quot;200&quot;, &quot;/tmp/beard_smaller.jpg&quot;], @options={}, @input=nil, @timeout=30, @max=nil, @pid=31478, @err=&quot;&quot;, @out=&quot;&quot;, @runtime=0.066965, @status=#&lt;Process::Status: pid 31478 exit 0&gt;&gt;&gt;

ImageMagick.dimensions(path: &quot;/tmp/beard_smaller.jpg&quot;)
=&gt; #&lt;GitHub::Result:0x3ff955cb0104 value: [200.0, 267.0]&gt;
</code></pre>
<p>So that worked. But what if we try it again for a picture that doesn&apos;t exist?</p>
<pre><code class="language-ruby">ImageMagick.resize({
  path: &quot;/Users/jnunemaker/Dropbox/Pictures/me/chin.jpg&quot;, 
  output_path: &quot;/tmp/beard_smaller.jpg&quot;,
  width: 200,
})
# =&gt; #&lt;GitHub::Result:0x3ff944ac06e8 error: #&lt;SpeakerDeckCommand::Error: #&lt;POSIX::Spawn::Child:0x00007ff289580308 @env={}, @argv=[[&quot;identify&quot;, &quot;identify&quot;], &quot;-format&quot;, &quot;%wx%h&quot;, &quot;/Users/jnunemaker/Dropbox/Pictures/me/chin.jpg&quot;], @options={}, @input=nil, @timeout=10, @max=nil, @pid=31513, @err=&quot;identify: unable to open image &apos;/Users/jnunemaker/Dropbox/Pictures/me/chin.jpg&apos;: No such file or directory @ error/blob.c/OpenBlob/3537.\n&quot;, @out=&quot;&quot;, @runtime=0.014732, @status=#&lt;Process::Status: pid 31513 exit 1&gt;&gt;&gt;&gt;
</code></pre>
<p>Booyeah! The original identify command in <code>dimensions</code> failed and it stopped the chain of commands. &#x1F680;</p>
<p><code>map</code> is pretty cool, but sometimes you want chain commands together that already each return a <code>GitHub::Result</code>. Have no fear, <code>GitHub::Result</code> has <code>then</code> for that.</p>
<pre><code class="language-ruby">Ghostscript.call(cache_path, output_path, ghostscript_options)
  .then { ImageMagick.resize(path: output_path, width: width) }
  .then { # whatever else you want to do }
</code></pre>
<p><code>ImageMagick.resize</code> is only invoked if <code>Ghostscript.call</code> is ok. Whereas <code>map</code> wraps return values in a result, <code>then</code> does not. <code>then</code> leaves the returning of a result up to you.</p>
<!--kg-card-end: markdown--><h2 id="the-roof-top-patio">The Roof Top Patio</h2><p>I can tell you are getting a bit excited at this point. <strong>You&apos;re thinking of all the places you have ugly feeling error handling.</strong> You&apos;re remembering a few spots where you should have error handling, but <strong>because it was ugly and painful, so you left it out</strong>.</p><p>Before you go making all your code resilient though, I want to put the &#x1F352; on top &#x2013; a killer roof top patio (with a view of course). &#xA0;To get the patio, it needs to be <strong>easy to test</strong> all of this and we need to <strong>know when things go wrong</strong> in production.</p><h3 id="rescue">rescue </h3><p>If an exception happens in the woods without reporting, does it make a sound? <strong>Nope</strong>. We need to ship these errors somewhere awesome &#x2013; like <a href="https://honeybadger.io">Honeybadger</a>. </p><!--kg-card-begin: markdown--><pre><code class="language-ruby">Ghostscript.call(cache_path, output_path, ghostscript_options)
  .then { ImageMagick.resize(path: output_path, width: width) }
  .rescue { |error| 
    Honeybadger.notify(error) # &lt;----
    GitHub::Result.error(error)
  }
</code></pre>
<!--kg-card-end: markdown--><p>That&apos;s it. You can tack that <code>rescue</code> on any chain of results. If any link in the chain fails, rescue is invoked and you&apos;ll get your error tracking. </p><p>The one key part, <strong>and I always forget this</strong>, is that <strong>you need to return a result</strong> in the <code>rescue</code> block. If there error is no big deal, you can return a result that is <code>ok?</code>. If there error should stop things (like above), you can use the handy result <code>GitHub::Result.error</code> creator provided (like above).</p><h3 id="testing">testing</h3><p>All of the aforementioned glory is enough, but let&apos;s not forget about testing. Resiliency in production is great, but if we are missing tests and shipping bugs we aren&apos;t <strong>really</strong> writing resilient code.</p><p>Speaker Deck uses <a href="http://www.xpdfreader.com/pdftotext-man.html">pdftotext</a> to extract transcriptions from PDF documents. Additionally, it uses <a href="https://rspec.info">rspec</a> for testing. Here is a quick example of stubbing the <code>Pdftotext</code> command with an error, while ensuring the text is defaulted to nothing rather than blowing up processing entirely.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">it &quot;should report error and return nothing for text on error&quot; do
  error = StandardError.new
  expect(Pdftotext).to receive(:call).and_return(GitHub::Result.error(error))
  expect(Honeybadger).to receive(:notify).with(error)
  result = uploader.extract_text(0)
  expect(result).to eq(&quot;&quot;)
end
</code></pre>
<!--kg-card-end: markdown--><p>A deck with images but no text is better than a deck with no images because text extraction failed. <code>GitHub::Result</code> makes this easy to do and, importantly, easy to test. Testing failure is just replacing the return value with an error result.</p><h2 id="conclusion">Conclusion</h2><p>Sure, this post was all about resilience with shell commands, but don&apos;t let that stop you from sprinkling GitHub::Result elsewhere. For example, I use it on Box Out Sports in our graphic preview rendering code. </p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class Preview
  def render_source
    GitHub::Result.new {
      # render the source to create graphic
    }
  end

  def render
    render_source.then { |body|
      GitHub::Result.new {
        HTTParty.post(uri, body: body, raise_on: RAISE_ON_STATUS_CODES)
      }.rescue { |error|
        store_error error
        GitHub::Result.error error
      }
    }
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Note that different methods are returning results for different purposes. <code>render</code> itself can fail if rendering the source required to generate the graphic fails. It can also fail if the http request to the render farm fails.</p><p>As shown in the <code>Preview</code> class above, you can <code>rescue</code> errors or let callers <code>rescue</code>. Its all very flexible and, as I keep saying, really provides building blocks for making aesthetically pleasing and resilient ruby code.</p><p>Overall, I&apos;d say the Speaker Deck shell commands are way more resilient than they were. Same goes for pretty much all the HTTP requests I do these days as I always wrap them with a <code>GitHub::Result</code>. </p><p>Try it out next time you go to do something that could fail and let me know what you think. </p>]]></content:encoded></item><item><title><![CDATA[FounderQuest: Talking Startups and Pricing Strategies]]></title><description><![CDATA[<!--kg-card-begin: html--><iframe width="100%" height="180" frameborder="no" scrolling="no" seamless src="https://share.transistor.fm/e/96a31c86"></iframe><!--kg-card-end: html--><p>I got to use my new Yeti mic for an <a href="https://www.founderquestpodcast.com/episodes/talking-startups-and-pricing-strategies-with-john-nunemaker">interview</a> on <a href="https://www.founderquestpodcast.com/">FounderQuest</a>, a podcast by the fine folks who run <a href="https://www.honeybadger.io">Honeybadger</a>. We had a blast talking about business models, pricing, cardinality, config, a/b testing, <a href="https://github.com/github/scientist">scientist</a> and more. Give it a listen!</p>]]></description><link>https://www.johnnunemaker.com/founderquest-interview/</link><guid isPermaLink="false">6039293703ffe900390f01e9</guid><category><![CDATA[podcast]]></category><category><![CDATA[flipper]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Fri, 26 Feb 2021 17:31:21 GMT</pubDate><content:encoded><![CDATA[<!--kg-card-begin: html--><iframe width="100%" height="180" frameborder="no" scrolling="no" seamless src="https://share.transistor.fm/e/96a31c86"></iframe><!--kg-card-end: html--><p>I got to use my new Yeti mic for an <a href="https://www.founderquestpodcast.com/episodes/talking-startups-and-pricing-strategies-with-john-nunemaker">interview</a> on <a href="https://www.founderquestpodcast.com/">FounderQuest</a>, a podcast by the fine folks who run <a href="https://www.honeybadger.io">Honeybadger</a>. We had a blast talking about business models, pricing, cardinality, config, a/b testing, <a href="https://github.com/github/scientist">scientist</a> and more. Give it a listen!</p>]]></content:encoded></item><item><title><![CDATA[Flipper.enable(☁️)]]></title><description><![CDATA[Even when you have a fully functioning product, there are a few hurdles to launching it. Read on to learn how we tackled them.]]></description><link>https://www.johnnunemaker.com/flipper-cloud-enabled/</link><guid isPermaLink="false">5ffdd46273ef870039efca5a</guid><category><![CDATA[flipper]]></category><category><![CDATA[performance]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Thu, 25 Feb 2021 16:35:03 GMT</pubDate><content:encoded><![CDATA[<p>I previously <a href="https://www.johnnunemaker.com/featureflipper-com-why/">wrote about</a> why I was working on <a href="https://www.flippercloud.io">Flipper Cloud</a>. Since then, <strong>everything has changed</strong>.</p><p>We <a href="https://speakerdeck.com">bought</a> Speaker Deck back from GitHub. My wife and I had another child. Microsoft <a href="https://news.microsoft.com/2018/06/04/microsoft-to-acquire-github-for-7-5-billion/">acquired</a> GitHub. I <a href="https://twitter.com/jnunemaker/status/1058354977750634496?s=20">left</a> GitHub. I <a href="https://boxoutsports.com">joined</a> Box Out Sports. <a href="https://orderedlist.com">Steve</a> and I &#xA0;<a href="https://twitter.com/jnunemaker/status/1331644788232368132?s=20">launched</a> Speaker Deck Pro. It has been a busy two years!</p><p>And I&apos;d be remiss not to mention the biggest change of all &#x2013; the pandemic.</p><p>All of these things led to Flipper Cloud getting pushed to the side. I mean, it was running and working great. </p><p>We used it on both Box Out and Speaker Deck. But no one else could. Well, save the lucky few who guessed the magic word. Haha!</p><p>Following the <a href="https://speakerdeck.com/pro">release</a> of Speaker Deck <a href="https://speakerdeck.com/pro">Pro</a>, Steve and I <strong>knew it was Flipper&apos;s turn</strong>. Seeing people give us their hard earned money for Speaker Deck was inspiring. Having a fully functional product for 2 years that no one can pay for is stupid.</p><p>But launching a product is <strong>no easy thing</strong>.</p><h2 id="the-first-hurdle-billing">The First Hurdle: Billing </h2><p>The first thing preventing Flipper from launching was a billing system. Turns out if people can&apos;t pay you, you don&apos;t make any money. </p><p>Thankfully, Stripe makes that really easy these days &#x2013; especially with their new-ish <a href="https://stripe.com/billing">billing portal</a>. </p><p>Steve completely rewrote the Box Out billing system in May 2020. And he was fresh off integrating Speaker Deck with Stripe in December 2020. So we were confident we could have something solid in place in a few days.</p><p>Before you can bill though, <strong>you must price</strong>.</p><h2 id="the-second-hurdle-pricing">The Second Hurdle: Pricing</h2><p>More difficult than naming is pricing. Steve and I have always preferred simple pricing. </p><ul><li>Whole numbers like $30 instead of $29.99. </li><li>A few tiers of no-nonsense pricing and you can &#x1F34C; out.</li><li>Limits for tiers based on a value metric. </li><li>General disdain for per seat pricing.</li></ul><p>Simple tiers worked for <a href="http://www.railstips.org/blog/archives/2010/01/06/live-from-harmony/">Harmony</a>. They worked for <a href="http://www.railstips.org/blog/archives/2011/02/20/give-yourself-constraints/">Gauges</a>. They are currently working for Box Out and Speaker Deck.</p><h3 id="tiers-and-a-value-metric">Tiers and a value metric</h3><p>We started with this tiered pricing model for Flipper. But the first question was what is the value metric? </p><p>We didn&apos;t want to limit <a href="https://www.flippercloud.io/docs#projects">projects</a>, <a href="https://www.flippercloud.io/docs#environments">environments</a> or <a href="https://www.flippercloud.io/docs#features">features</a> in anyway, as doing so could encourage awkward use of the product (like using one project for all your projects). We want the product to always feel smooth.</p><p>Additionally, we&apos;ve noticed the more developers you have using feature flags, the more valuable they become. Ding! We saw this during our time at GitHub. Value metric chosen &#x2013; number of developers.</p><p>So we started with 3 plans based on the number of developers (value metric):</p><ul><li>$50 - 2 developers</li><li>$200 - 10 developers</li><li>$400 - 20 developers</li></ul><h3 id="but-it-didn-t-feel-right">But it didn&apos;t feel right</h3><p>The problem with this was $0 (open source) to $50 is a big leap. So was $50 to $200 and $200 to $400 for that matter. </p><p>For the same reasons we didn&apos;t want to limit features or projects, we didn&apos;t want customers to avoid adding a developer because it would tip them into a much larger plan. </p><ul><li>Our goal isn&apos;t to become a &#x1F984;. Been there, done that.</li><li>Our goal isn&apos;t to squeeze as much &#x1F4B0; as we can from our customers. </li><li>Our goal is <strong>to provide value to customers</strong> that makes it <strong>worth it for them</strong> to pay us and <strong>worth it for us</strong> to do so. That&apos;s it.</li></ul><h3 id="per-seat-really">Per seat... really?</h3><p>We brainstormed for a while and decided per seat pricing actually makes a lot of sense for Flipper. Shocking. I never thought I&apos;d read those words written from my weak little programmer fingers &#x1F450;.</p><p>The value metric is number of developers. More developers for the customer is likely tied very closely to more revenue or funding. As the customer grows, we grow with them. If they shrink, the value they get from us and the cost to them does as well. </p><p><strong>It just made sense</strong>.</p><ul><li> Per seat pricing <strong>avoids the big jumps</strong> from tier to tier.</li><li> Per seat pricing <strong>ties the value to the cost</strong> for the customer.</li></ul><h3 id="market-research">Market Research </h3><p>Now the question was, how much per seat? We looked around at the market &#x2013; <a href="https://launchdarkly.com">Launch Darkly</a>, <a href="https://split.io">Split</a>, <a href="https://rollout.io">Rollout</a>, <a href="https://configcat.com">Configcat</a>, <a href="https://prefab.cloud">Prefab</a>, <a href="https://ajustee.com">Ajustee</a>, <a href="https://unleash-hosted.com">Unleash</a> and <a href="https://switchover.io">Switchover</a> to name a few.</p><p>The common theme was <strong>$10 - $90 per seat</strong>. The products on the higher end of that range were typically also tied to MAU (monthly active users aka actors in Flipper&apos;s terms). </p><p>Tying to MAU makes a lot of sense as well. If you have more actors that you are checking flags for, you likely are receiving more value by using flags. We don&apos;t currently track MAU&apos;s and thus don&apos;t provide any analytics (aka value) on that data. </p><p>We only charge for the value we provide. Since we don&apos;t provide analytics yet, there was no reason to try to price in the upper range. </p><p>Additionally, we want <strong>using</strong> Flipper Cloud to <strong>be a no brainer</strong>, especially for those <strong>already using open source Flipper</strong>.</p><p>We oscillated between $10 to $30 per seat and finally just split the difference &#x2013; <strong>$20 per seat</strong>. I&apos;m pretty happy with where we ended up. </p><figure class="kg-card kg-image-card"><img src="https://www.johnnunemaker.com/content/images/2021/02/pricing.png" class="kg-image" alt loading="lazy" width="923" height="663" srcset="https://www.johnnunemaker.com/content/images/size/w600/2021/02/pricing.png 600w, https://www.johnnunemaker.com/content/images/2021/02/pricing.png 923w" sizes="(min-width: 720px) 720px"></figure><p>But no one will buy, if they don&apos;t <strong>trust</strong> <strong>you</strong>.</p><h2 id="the-third-hurdle-trust">The Third Hurdle: Trust</h2><p>In talking with people about Flipper Cloud, the first thing that always came up was: ...<strong>but what happens if you are down</strong>, will my app be down?</p><p>This is a great problem! Its not a you don&apos;t provide any value problem. Or a you are too expensive problem. </p><p>This is an <strong>I want to use Flipper Cloud, </strong>but I want to know<strong> it won&apos;t hurt me</strong> problem. Making software not hurt you is a specialty of ours.</p><p>Before I answer the <em>what happens if you are down question</em>, let&apos;s dive into some background.</p><h3 id="one-feature-check-one-api-request">One Feature Check, One API Request</h3><p>The very first way that the <code>Flipper::Cloud</code> client <em>could</em> work is every time a feature check happens, it makes a request to the Flipper Cloud API to say &quot;hey is this feature enabled for this actor?&quot;. </p><ul><li>If we were unavailable, your app would be unavailable. </li><li>If we were available and you were doing more than a single feature check, your app would be slow. Real slow.</li></ul><p>Nope. No way that would ever work. I worked on GitHub.com, one of the most trafficked sites in the world, for nearly 7 years. </p><p>The majority of my time at GitHub was focused on availability and resiliency. I would never ship something like the aforementioned to the world. That is just asking to tick customers off.</p><h3 id="one-request-in-your-app-one-api-request">One Request in Your App, One API Request</h3><p>The great thing about (open source) Flipper is that it is designed to be as performant as you need. It can <a href="http://www.railstips.org/blog/archives/2016/12/08/flipper-preloading/">preload all the data</a> required to check a feature for any actor, typically in one or two network calls.</p><p>With <a href="https://github.com/jnunemaker/flipper/blob/f398a745b320ef081d9618b58006d6dfb4b7dde6/docs/Optimization.md#memoizing-middleware">a single middleware</a> addition, Flipper can preload all feature data for a request/job in your application. This means you can say &quot;hey is this feature enabled for this actor?&quot; as many times as you want on the page and no additional API requests will be issued. </p><ul><li>If we were unavailable, your app would be unavailable.</li><li>If we were available, no matter how fast your application was, it would always have a base response time of however long it takes for your app to request feature data from our API.</li></ul><p>Nope. No way. This would make a 1 to 1 correlation between your traffic and our API traffic. I&apos;m never a fan of tying things together like that. </p><p>My goal is always <strong>to</strong> <strong>make things as constant as possible regardless of throughput</strong>. </p><h3 id="one-api-request-per-n-seconds-per-thread-or-process-">One API Request per N seconds per thread (or process)</h3><p>The next step up in efficiency was to move the request on every page load to one request every N seconds per process per thread. This is far from ideal, but <strong>we actually used it</strong> on Box Out and Speaker Deck for more than a year.</p><p>Flipper is built on adapters. And the adapters are very composable/layerable. </p><p>At <a href="https://github.com">GitHub</a>, we used a MySQL adapter, wrapped by a Memcached adapter. This meant all reads first went to memcached and then only to mysql if the cache wasn&apos;t populated.</p><p><a href="https://gitlab.com">GitLab</a> does something similar. Their <a href="https://gitlab.com/gitlab-org/gitlab-foss/-/blob/22dc7bdafcf442b96ace849341fb87bca7160614/lib/feature.rb#L164-181">Flipper instance</a> caches in memory, falling back to redis which falls back to Active Record.</p><p>This adapter layering is also how the per request memoization I talked about before works. I created a <a href="https://github.com/jnunemaker/flipper/blob/f398a745b320ef081d9618b58006d6dfb4b7dde6/lib/flipper/adapters/memoizable.rb">memoizing adapter</a> and a <a href="https://github.com/jnunemaker/flipper/blob/f398a745b320ef081d9618b58006d6dfb4b7dde6/lib/flipper/middleware/memoizer.rb">middleware</a> that ticks it <a href="https://github.com/jnunemaker/flipper/blob/f398a745b320ef081d9618b58006d6dfb4b7dde6/lib/flipper/middleware/memoizer.rb#L54">on</a> and <a href="https://github.com/jnunemaker/flipper/blob/f398a745b320ef081d9618b58006d6dfb4b7dde6/lib/flipper/middleware/memoizer.rb#L64">off</a> per request. Anytime you use <code>Flipper.new(adapter)</code>, I <a href="https://github.com/jnunemaker/flipper/blob/f398a745b320ef081d9618b58006d6dfb4b7dde6/lib/flipper/dsl.rb#L20-L23">wrap the adapter you provide</a> with the memoized adapter, so you don&apos;t have to.</p><p>Knowing how adapters work in Flipper (I mean I wrote them right? &#x1F606;), I created a <a href="https://github.com/jnunemaker/flipper/blob/v0.13.0/lib/flipper/adapters/sync.rb">sync adapter</a> that worked with a local and a remote. It defaulted to <a href="https://github.com/jnunemaker/flipper/blob/v0.13.0/lib/flipper/adapters/sync.rb#L34">synchronizing on an interval</a> to keep the local in sync with the remote.</p><p>This moved <code>Flipper::Cloud</code> from making API requests on every request in your app to one API request every N seconds per process/thread in your app. More processes in your app meant more time in your requests talking to our API. </p><ul><li>If we were unavailable, you only experienced slower requests every N seconds per process. We also stored the data in your app, so feature check reads still worked. </li><li>If we were available, you&apos;d see one request to Flipper per process per thread (if using threads). </li></ul><p>Much improved. Still, anyone who has worked on a high throughput app knows that this isn&apos;t a good idea long term. </p><h3 id="one-api-request-per-n-seconds">One API request per N seconds</h3><p>The next improvement was a rake task. Ugh. Yuck. But it worked great! I moved Box Out to use the ActiveRecord adapter in production and added a rake task to sync every N seconds. </p><p>The rake task configured flipper to use <code>Flipper::Cloud</code> with the same Active Record adapter. Every N seconds the rake task would run, Cloud would realize it had not synced and would do so. </p><ul><li>If we were available, your app would just make one request every N seconds.</li><li>If we were unavailable, your app would remain available as all reads go to the local to your app adapter of your choosing (Active Record, Redis, Mongo, whatever).</li></ul><p>This solved the performance problem of making requests to the Flipper Cloud API in your app&apos;s request lifecycle. But there were a couple of downsides:</p><ul><li>You needed a separate process to perform the syncing.</li><li>You had to wait for feature changes as syncing only happened every N seconds.</li></ul><h3 id="from-pull-to-push">From Pull to Push</h3><p>I knew we needed to move from pull (all of the aforementioned stuff) to push in a way that isolates your availability from ours. </p><p>My goals were:</p><ul><li>fast enough sync that it <em>feels</em> instant (aka &lt; a few seconds).</li><li>no separate process for you to run.</li><li>minimal impact to performance.</li></ul><p>At some point, it occurred to me that webhooks could likely meet all of those goals. </p><ul><li><strong>Webhooks feel instant</strong>. Yes, our workers delivering the webhooks could get behind, but the common case is the webhook is delivered faster than you can go back to your app in the browser and refresh. </li><li><strong>Webhooks can be mounted in your web app</strong> and thus avoid needing a separate process. <code>Flipper::Cloud</code> now ships with a rack app you can mount in <a href="https://rubyonrails.org">Rails</a> or with <code><a href="https://github.com/rack/rack/blob/a05f8d56f9ac4da14dddb8f312a3b43644f73397/lib/rack/urlmap.rb">Rack::URLMap</a></code> in any rack based application (e.g. <a href="http://sinatrarb.com">sinatra</a>, <a href="https://hanamirb.org">hanami</a>, or <a href="http://roda.jeremyevans.net/">roda</a>).</li><li><strong>Webhooks minimize performance impact to your application</strong>. They isolate your applications need to talk to Flipper Cloud to a single request in your app that is receiving the hook &#x2013; just a conversation between machines.</li></ul><p>I built the webhook system and switched over Box Out and Speaker Deck without issues. Our pre-launch people switched over without issues as well. </p><p>Webhooks have <strong>made syncing changes fast</strong>, <strong>improved customer app performance</strong> and <strong>dramatically reduced</strong> the <strong>number of API requests</strong> our app has to serve. Win, win, win.</p><figure class="kg-card kg-image-card"><img src="https://www.johnnunemaker.com/content/images/2021/02/hannibal-I-love-when-a-plan-comes-together.gif" class="kg-image" alt="I love it when a plan comes together" loading="lazy" width="180" height="180"></figure><p>They are also really simple to use. For example, this is how they get mounted in a Rails app:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">SpeakerDeck::Application.routes.draw do
  mount Flipper::Cloud.app, at: &quot;_flipper&quot;
end
</code></pre>
<!--kg-card-end: markdown--><p>The example above creates an endpoint that you can add as a <a href="https://www.flippercloud.io/docs#webhooks">webhook</a> in Flipper Cloud (<code>https://yourdomain.com/_flipper/webhooks</code>). If you want to see it working end to end, check out this one minute screencast I whipped up.</p><figure class="kg-card kg-embed-card"><iframe width="200" height="113" src="https://www.youtube.com/embed/aV6DkfdFOT0?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></figure><h2 id="the-hurdles-are-hurdled">The Hurdles are Hurdled</h2><p>At this point, we had a piece of software that: </p><ul><li>had a price. </li><li>people could pay for.</li><li>people could trust. </li></ul><p>All that was left was to <strong>enable</strong> the subscriptions feature in the Flipper Cloud project in the Fewer &amp; Faster organization. Yep, we use <code>Flipper::Cloud</code> for Cloud. Cloud-ception. </p><figure class="kg-card kg-embed-card"><blockquote class="twitter-tweet"><p lang="en" dir="ltr">&#x1F42C;Get it while its hot! <a href="https://t.co/CZawrxidkQ">https://t.co/CZawrxidkQ</a> <br><br>My favorite features: personal environments (with prod mirroring), audit log rollbacks, and autocomplete for actors/groups.<br><br>If you&apos;ve been wanting to try out <a href="https://twitter.com/flipper_cloud?ref_src=twsrc%5Etfw">@flipper_cloud</a>, head on over and sign up!</p>&#x2014; John Nunemaker (@jnunemaker) <a href="https://twitter.com/jnunemaker/status/1348717928494063616?ref_src=twsrc%5Etfw">January 11, 2021</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</figure><p>Finally, January 11, 2021, <a href="https://flippercloud.io/">Flipper Cloud</a> was launched. </p><p>So how is it going? Honestly, pretty great. Outside of opening the doors and a few emails, we haven&apos;t done any marketing, but people are signing up and paying. Time to start getting the word out!</p><p>Want more? Head on over to our <a href="https://www.flippercloud.io/docs#getting-started">getting started guide</a> or check our our <a href="https://github.com/fewerandfaster/flipper-rails-demo">demo rails app with Cloud integrated</a>. </p><p>If you are curious, <a href="https://www.flippercloud.io/docs#oss-migration">migrating from open source Flipper</a> is a few lines of code. We also have <a href="https://github.com/jnunemaker/flipper/tree/master/examples/cloud">several examples</a> of how to use <code><a href="https://github.com/jnunemaker/flipper/blob/master/examples/cloud/basic.rb">Flipper::Cloud</a></code>, <a href="https://github.com/jnunemaker/flipper/blob/master/examples/cloud/app.ru">webhooks</a> and <a href="https://github.com/jnunemaker/flipper/blob/master/examples/cloud/import.rb">migrate from another adapter</a>.</p><p>Feature flags have <strong>changed the way I build and release software</strong>. Regardless of your app size or development process, feature flags are beneficial. Often, I think people assume that flags are just for large companies, but I&apos;d say no. </p><p>Box Out is two developers and I don&apos;t even know what we&apos;d do if we didn&apos;t have flags. Same goes for Fewer &amp; Faster. I&apos;m so use to reaching for Flipper when I start anything new that I&apos;d be lost without it. </p><p><strong>I want the same for you</strong>. I really want Flipper Cloud to be valuable for you. If you find anything missing or have any great ideas, please<a href="mailto:john@fewerandfaster.com"> </a>reach out.</p><p>To anyone curious, I&apos;d be happy to <a href="mailto:john@fewerandfaster.com">email</a>, chat, zoom, demo or even remote pair with you to setup Flipper Cloud, so you can see first hand how it would work for you. I mean it. Don&apos;t be shy.</p>]]></content:encoded></item><item><title><![CDATA[Rails: Postgres Partial Indexing]]></title><description><![CDATA[Postgres has a nice feature where you can index only the values you want to query on. Today I learned that Rails has a nice shortcut for taking advantage of said feature.]]></description><link>https://www.johnnunemaker.com/rails-postgres-partial-indexing/</link><guid isPermaLink="false">600c7c0127c3920039cb1b62</guid><category><![CDATA[TIL]]></category><category><![CDATA[rails]]></category><category><![CDATA[performance]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Sat, 23 Jan 2021 20:10:08 GMT</pubDate><content:encoded><![CDATA[<p>While working on a new <a href="https://boxoutsports.com">Box Out</a> feature, I needed to query for graphics that have been shared on social media. </p><p>I had a <code>graphics</code> table with a <code>tweet_id</code> column. I wanted to query for graphics that have been shared on twitter (aka <code>tweet_id IS NOT NULL</code>). &#xA0;</p><p>The table is in the hundreds of thousands of rows, so I wanted to index <code>tweet_id</code> to help the query along. I was going to a plain old <code>add_index</code>. But then I remembered that you can do partial indexes.</p><p>I knew that this was <a href="https://www.postgresql.org/docs/8.0/indexes-partial.html">possible with Postgres</a>. And I&apos;ve used partial indexes in the past. What I didn&apos;t know is that you do this through Rails migrations without dropping down to <code>execute</code> and vanilla SQL (not that there is anything inheritantly bad about SQL).</p><h2 id="where">where</h2><p>A few googles later I learned that Rails actually has support built in. The <code>where</code> key allows you to define a partial index.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">add_index :graphics, :tweet_id, 
  where: &quot;tweet_id IS NOT NULL&quot;, 
  algorithm: :concurrently
</code></pre>
<!--kg-card-end: markdown--><p>Slick! This means only <code>graphics</code> with a <code>tweet_id</code> will go into the index. Just a minor space savor for me, but could be a big deal for you and one of your tables.</p><p>For more space saving tips like this, <a href="https://hakibenita.com/postgresql-unused-index-size">check out this post</a> I found.</p><h2 id="aglorithm-concurrently">aglorithm: :concurrently</h2><p>If you haven&apos;t seen <code>aglorithm: :concurrently</code>, it allows you to avoid downtime by indexing the column in the background. </p><p>It takes a bit longer to complete and can slow things down a bit (which makes sense, as extra work is happening). But it means your app can be up and available while adding the index. No locks or downtime. </p><h2 id="strong_migrations">strong_migrations</h2><p>Lastly, while I&apos;m on the topic of migrations, one of my favorite gems is <a href="https://github.com/ankane/strong_migrations">strong_migrations</a>. It automatically catches migrations that could cause problems in production while you are still in development and lets you know. Usually, it provides you with the steps to get to where you want to be as well. </p><p>For example, on this migration I initially forgot to use the <code>algorithm: :concurrently</code>. As soon as I tried to <code>bin/rails db:migrate</code>, strong_migrations complained quite loudly at me by raising an error. I updated the migration and then it ran smoothly.</p>]]></content:encoded></item><item><title><![CDATA[Rails: Following and Notifications]]></title><description><![CDATA[A month or so ago we released following and email notifications for Speaker Deck. I thought I'd share how we whipped this together and why we did it the way we did. The end result is a stable notification system that gets the job done and will be easy to grow as Speaker Deck continues to grow.]]></description><link>https://www.johnnunemaker.com/rails-following-and-notifications/</link><guid isPermaLink="false">5fdc0a015afe79003938d9b4</guid><category><![CDATA[rails]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Mon, 28 Dec 2020 20:44:11 GMT</pubDate><content:encoded><![CDATA[<p>For the curious, here is a quick introduction to the feature.</p><p></p><!--kg-card-begin: html--><div style="width: 100%; margin: 0 0 30px;"><script async class="speakerdeck-embed" data-id="3c33a9d464c148e692ee41657ab469b9" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script></div><!--kg-card-end: html--><p>Ok, now you have the bird&apos;s eye view. Let&apos;s get into the database schema and the code. Along the way, I&apos;ll also take you down a winding path that includes academic papers and some future ideas.</p><h2 id="the-connection">The Connection</h2><p>The heart of following is a <strong>connection</strong>. A connection connects a <strong>consumer</strong> to a <strong>producer</strong>. The producer is the thing that creates the <strong>events</strong> that the consumer wants to be notified about. </p><!--kg-card-begin: markdown--><pre><code class="language-ruby">create_table &quot;connections&quot;, force: :cascade do |t|
  t.integer &quot;consumer_id&quot;, null: false
  t.string &quot;consumer_type&quot;, limit: 50, null: false
  t.integer &quot;producer_id&quot;, null: false
  t.string &quot;producer_type&quot;, limit: 50, null: false
  t.datetime &quot;created_at&quot;, null: false
  t.datetime &quot;updated_at&quot;, null: false
  t.index [&quot;consumer_type&quot;, &quot;consumer_id&quot;, &quot;producer_type&quot;, &quot;producer_id&quot;], name: &quot;consumer_to_producer&quot;, unique: true
  t.index [&quot;producer_type&quot;, &quot;producer_id&quot;], name: &quot;index_connections_on_producer_type_and_producer_id&quot;
end
</code></pre>
<!--kg-card-end: markdown--><p>In the case of Speaker Deck, the consumer is the person who is following a speaker. The producer is the speaker they are following. </p><p>I know that I won&apos;t have a type that is greater than 50, so I added limits to both <code>consumer_type</code> and <code>producer_type</code>. </p><p>For starting indexes, I created a unique index on <code>[&quot;consumer_type&quot;, &quot;consumer_id&quot;, &quot;producer_type&quot;, &quot;producer_id&quot;]</code>. I don&apos;t want someone to be able to follow another person more than once. This unique index prevents that. It also covers any queries to get all the producers a given consumer is following.</p><p>But the unique index doesn&apos;t cover the opposite &#x2013; showing all the followers of a given producer. For this, I added another index on <code>[&quot;producer_type&quot;, &quot;producer_id&quot;]</code>. </p><p>Typically, you want the most selective column first in an index. In our case, there will be dramatically more unique values for <code>producer_id</code> than <code>producer_type</code>, thus <code>producer_id</code> would be more selective. </p><p>The problem with an index of <code>[&quot;producer_id&quot;, &quot;producer_type&quot;]</code> is that I&apos;d have to do a table scan to get all the rows matching a particular <code>producer_type</code> or the distinct <code>producer_type</code> values or how often those values are used. I know from history that these are useful, so I tend to index type before id.</p><p>Enough about indexes, here is a taste of the model:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class Connection &lt; ApplicationRecord
  VALID_CONSUMER_TYPES = Set[&quot;User&quot;].freeze
  VALID_PRODUCER_TYPES = Set[&quot;User&quot;].freeze

  belongs_to :consumer, polymorphic: true
  belongs_to :producer, polymorphic: true

  scope :for_producer, -&gt;(producer) { where(producer: producer) }
  scope :for_consumer, -&gt;(consumer) { where(consumer: consumer) }

  validates :consumer_id, presence: true, numericality: true
  validates :consumer_type, presence: true, length: {maximum: 50},
    inclusion: {in: VALID_CONSUMER_TYPES }

  validates :producer_id, presence: true, numericality: true
  validates :producer_type, presence: true, length: {maximum: 50},
    inclusion: {in: VALID_PRODUCER_TYPES }
end
</code></pre>
<!--kg-card-end: markdown--><p>So that is how people connect to (aka follow) each other. But how do we know when to notify those consumers about producer activity? </p><h2 id="the-event">The Event</h2><p>First, let&apos;s talk about what I could have done. I could have added a callback in the <code>Talk</code> model. After each save the callback would determine if it was time to notify anyone. If so, the callback would loop through all the consumers of the producer that published the talk and email each of them.</p><p>Nothing wrong with the aforementioned, but our <code>Talk</code> model would have grown quite a bit larger. Instead, I went the route of a new database-backed model <code>ConnectionEvent</code>. </p><p>Let&apos;s check out the schema:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">create_table &quot;connection_events&quot;, force: :cascade do |t|
  t.integer &quot;producer_id&quot;, null: false
  t.string &quot;producer_type&quot;, limit: 50, null: false
  t.integer &quot;object_id&quot;, null: false
  t.string &quot;object_type&quot;, limit: 50, null: false
  t.integer &quot;type&quot;, null: false
  t.jsonb &quot;data&quot;, default: {}, null: false
  t.datetime &quot;created_at&quot;, null: false
  t.datetime &quot;updated_at&quot;, null: false
  t.integer &quot;state&quot;, limit: 2, default: 0, null: false
  t.index [&quot;object_type&quot;, &quot;object_id&quot;], name: &quot;index_connection_events_on_object_type_and_object_id&quot;
  t.index [&quot;producer_type&quot;, &quot;producer_id&quot;], name: &quot;index_connection_events_on_producer_type_and_producer_id&quot;
end
</code></pre>
<!--kg-card-end: markdown--><p>You&apos;ll recognize producer again. Additionally, this table introduces an <code>object</code>. The object is the thing that the producer produced. In the case of Speaker Deck, the producer is the talk owner. The talk they publish is the object.</p><p>The <code>type</code> is the what type of event occurred for the object. For now, we only have <code>:publish</code>, but we have several ideas for other <code>ConnectionEvent</code> types in the future (e.g. <code>:follow</code>, <code>:star</code>, etc.).</p><p><code>state</code> keeps track of processing for us. Each event starts as pending. Every <code>N</code> minutes we run a task to grab all pending events and process them. When this occurs, the event moves from <code>pending</code> to <code>processing</code> and, finally, to <code>processed</code>.</p><p>There is nothing special to see in the <code>ConnectionEvent</code> model. It looks just like <code>Connection</code>, so I&apos;ll skip over it since I can already sense this is going to be a doozy of a post.</p><p>So I lied to you a bit. I do actually have a callback on Talk, but instead of doing all the work it just creates the <code>ConnectionEvent</code>. So how do all those connection events someday end up as emails in your inbox? </p><h2 id="the-connectioneventprocessor">The ConnectionEventProcessor</h2><p>Every <code>N</code> minutes we run a task. It looks like this:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">namespace :connection_events do
  task process: :environment do
    logger = Rails.env.development? ? Logger.new(STDOUT) : Rails.logger
    ConnectionEventProcessor.call(logger: logger)
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>The primary goal of the processor is to enqueue a job for each event that can handle the notification. This keeps the processor snappy and moves any possible backups to the job system.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby"># Gets all pending connection events and enqueues notification jobs for them.
class ConnectionEventProcessor
  def self.call(logger: Rails.logger)
    new(logger: logger).call
  end

  def initialize(logger: Rails.logger)
    @logger = logger
  end

  def call
    processed = 0
    ConnectionEvent.ready_for_processing.order(:id).find_each do |connection_event|
      connection_event.processing!
      @logger.info &quot;ConnectionEventProcessor processing #{connection_event.inspect}&quot;

      begin
        Resque.enqueue ConnectionEventNotificationJob, connection_event.id
      rescue =&gt; error
        @logger.info &quot;ConnectionEventProcessor pending #{connection_event.inspect} due to #{error.inspect}&quot;
        connection_event.pending!
      end
      @logger.info &quot;ConnectionEventProcessor enqueued ConnectionEventNotificationJob for #{connection_event.inspect}&quot;

      connection_event.processed!
      @logger.info &quot;ConnectionEventProcessor processed #{connection_event.inspect}&quot;

      processed += 1
    end

    @logger.info &quot;ConnectionEventProcessor processed #{processed} event(s)&quot;
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Pardon all the logging, but I like verbosity for when things go wrong. I was going to remove it for the post, but I think it is good to show real production stuff. Real production code has problems and needs to be debugged. </p><p>The majority of the above code is a bunch of logging to show what is happening and a bunch of rescuing so one notification event doesn&apos;t cause problems to any other notification event.</p><h2 id="the-connectioneventnotificationjob">The ConnectionEventNotificationJob</h2><p>Once again, I&apos;m going to give you the real guts of this code and all the error handling that comes with it. </p><!--kg-card-begin: markdown--><pre><code class="language-ruby"># Sends all the notifications for a given connection event.
class ConnectionEventNotificationJob &lt; ApplicationJob
  @queue = :notifications

  def self.perform(connection_event_id)
    new(connection_event_id).perform
  end

  def initialize(connection_event_id)
    @connection_event_id = connection_event_id
  end

  def perform
    # Can we find the connection event.
    unless connection_event
      Rails.logger.info &quot;#{self.class.name} skipping because connection event not found (#{@connection_event_id}&quot;
      return
    end

    # We only want this to deal with publish events for now.
    unless connection_event.publish?
      Rails.logger.info &quot;#{self.class.name} skipping because invalid type #{connection_event.inspect}&quot;
      return
    end

    # Can we find the talk.
    talk = connection_event.object
    unless talk
      Rails.logger.info &quot;#{self.class.name} skipping because object missing #{connection_event.inspect}&quot;
      return
    end

    # Can we find the talk owner.
    unless talk.owner
      Rails.logger.info &quot;#{self.class.name} skipping because talk owner missing #{connection_event.inspect}&quot;
      return
    end

    # Notify the owner that their talk is published and processed.
    notify talk.owner

    # Can we find the producer.
    producer = connection_event.producer
    unless producer
      Rails.logger.info &quot;#{self.class.name} skipping because producer missing #{connection_event.inspect}&quot;
      return
    end

    # Notify each of the producer&apos;s followers.
    producer.followers.not_abusive.find_each { |follower| notify follower }
  end

  private

  def connection_event
    @connection_event ||= ConnectionEvent.find_by_id(@connection_event_id)
  end

  def notify(user)
    return unless Flipper.enabled?(:connections, user)

    Rails.logger.info &quot;#{self.class.name} delivering #{connection_event.inspect} to #{user.username}&quot;
    begin
      ConnectionEventMailer.published(connection_event.object, user).deliver
    rescue =&gt; exception
      Raven.capture_exception(exception, {
        extra: {
          connection_event_id: @connection_event_id,
          user_id: user.id,
        }
      })
    end
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Again, the key point here is lots of error handling and rescuing, so failing to notify a single user doesn&apos;t affect the notifying of other users. </p><p>You&apos;ll also notice that all of this is wrapped with a <a href="https://www.flippercloud.io">Flipper feature</a>. Every top level feature I work on gets wrapped by a Flipper feature. This makes it super easy to turn things off if necessary. </p><p>I occasionally have short term features when switching parts of a system up, but most top level features are wrapped in a way that they could be disabled without interrupting users.</p><p>At this point, we have a fully functional following and notification system. Not very fancy eh? But it does the trick and works great in production. That is what I care about. I like boring. Sorry not sorry. </p><p>Hopefully this is straightforward so far. But why did I add this extra polymorphic cruft and unusual verbiage? Wouldn&apos;t a <code>Follow</code> model with <code>follower_id</code> and <code>followee_id</code> be more simple? I&apos;m glad you asked.</p><h2 id="the-papers">The Papers</h2><p>Many moons ago I read a couple papers that changed the way I think about following, timelines and notifications. </p><p>The first was <em><a href="https://dl.acm.org/doi/abs/10.1145/1807167.1807257">Feeding Frenzy: Selectively Materializing Users&#x2019; Event Feeds</a>.</em> The second was the sequel to that paper &#x2013; named<em> <a href="https://dl.acm.org/doi/10.1145/1996413.1996414">Feed Following: The Big Data Challenge in Social Applications</a></em>. </p><p>Both are easy and enjoyable reads (and I don&apos;t consider myself an academic). I&apos;ll do my best to tldr the papers for you. </p><p>Every system does <strong>reads</strong> and <strong>writes</strong>. Typical systems do far more reads than writes. Social applications can be a mixed bag. But I&apos;m getting ahead of myself. Let&apos;s talk through two ways to materialize timelines based on consumers, producers, connections and connection events.</p><h3 id="read-time-materialization">Read-time Materialization</h3><p>To optimize for fast writes, you normalize your database tables and materialize the timeline when requested (aka user says show me what&apos;s new). This is the database structure that Speaker Deck currently uses (as noted above).</p><p>When you follow someone, we do one write to store the <code>Connection</code>. When you publish a talk, we do one write to store the &#xA0;<code>ConnectionEvent</code>. </p><p>To show a timeline of events in the Speaker Deck UI, we&apos;d need to join <code>connections</code>and <code>connection_events</code> together to materialize it. </p><!--kg-card-begin: markdown--><pre><code class="language-sql">SELECT e.*
FROM events e
INNER JOIN
  connections c ON
    e.producer_id = c.producer_id AND
    e.producer_type = c.producer_type
WHERE
  c.consumer_id = :consumer_id AND
  c.consumer_type = :consumer_type
ORDER BY
  e.created_at DESC
LIMIT :limit
OFFSET :offset
</code></pre>
<!--kg-card-end: markdown--><p>This works fine for to a point, but when your system grows to hundreds of thousands (or worse millions) of users and events, read-time materializing with joins gets slow. I&apos;ve seen it happen in several different applications &#x2013; notably github.com.</p><p>If read-time materialization is slow, how do we speed it up? </p><h3 id="write-time-materialization">Write-time Materialization</h3><p>To make our reads fast again, the typical path is to denormalize our database. This means our <code>connection_events</code> table will now get one row per combination of event and consumer of that event, instead of one row per event. </p><p>If a producer has 300 followers, we&apos;ll create 300 rows in the <code>connection_events</code> table &#x2013; one for each follower. From there, you can index <code>[&quot;consumer_type, &quot;consumer_id&quot;]</code>. Now, you don&apos;t need to join to build the timeline.</p><!--kg-card-begin: markdown--><pre><code class="language-sql">SELECT *
FROM events
WHERE
  consumer_id = :consumer_id AND
  consumer_type = :consumer_type
ORDER BY
  created_at DESC
LIMIT :limit
OFFSET :offset
</code></pre>
<!--kg-card-end: markdown--><p>Just like that, your timelines will get much faster. But the speed improvements don&apos;t have to stop there. You can add <code>created_at</code> to your index compound consumer index. You can even index <code>created_at</code> descending if your database supports that. But now you are generating <code>N * (# of consumers)</code> rows for each event, which means your table is going to get large fast. </p><p>Table growth is also a highly solveable problem, but I won&apos;t dive into it deeply here. The tldr is you can partition in some fashion. First, maybe you move the <code>connections</code> and <code>connection_events</code> tables to their own server. From there, you can split consumers up into <code>N</code> tables. Then you can move the <code>N</code> tables to <code>N</code> servers. </p><p>The path to scaling materialized events is to continue making the bucket of events you have to search through for a given consumer smaller and smaller. </p><h3 id="the-tldr-from-the-papers">The tldr from the papers</h3><p>What I took you through above are the two ends of the spectrum &#x2013; minimum writes and storage verse maximum writes and storage.</p><p>One one end, all the work of materializing the timelines is done at read-time. </p><p>On the other end, all the work is done at the time of the event &#x2013; write-time. </p><p>Typically, <em>the choice you make</em> is will your system materialize at read-time or write-time.</p><p>The <strong>key point of the papers</strong> above is that making that choice at the system level is <em>inefficient</em>. You are either constantly re-materializing the timeline at read-time or materializing the timeline at write-time when it might not ever be read.</p><p>Instead, the papers propose making the decision to materialize at read-time or write-time <em>based on the producer and consumer relationship</em>. </p><p>Consumers who constantly check their timelines should have pre-materialized timelines (write-time so reads are snappy). </p><p>Producers who generate a lot of events should likely have read-time materialization for any consumers who rarely check their timelines.</p><p>The papers push for a <em>score</em> for each producer/consumer relationship. The score determines whether the timeline should be materialized at read-time or write-time. </p><p>When materializing a timeline for a given consumer, you merge the two &#x2013; the pre-materialized (write-time) and the read-time (think joins). </p><p>Pushing the decision of when to materialize to the producer-consumer combo allows you to fully optimize the system <strong>storage use</strong> and <strong>query latency</strong>. </p><p>If you want to lower query latency, you can tweak the score at which you switch to write-time materialization and as such you&apos;ll use more storage. </p><p>The same is true for the opposite. If you need to control storage use, you can tweak the score which will reduce storage, but increase query latency. </p><p>Brilliant!</p><h2 id="why-is-speaker-deck-read-time-materialization">Why is Speaker Deck read time materialization?</h2><p>So, if you&apos;ve been following along you know that we chose read-time materialization for Speaker Deck. Note the nicely normalized <code>connections</code> and <code>connection_events</code> database tables from above. &#xA0;</p><p>Speaker Deck is in the <em>hundreds of thousands</em> of users and talks range. So why did we choose read-time materialization of timelines? </p><p>Well, we did and we didn&apos;t. Our database tables reflect a read-time materialization of timelines, but really we just punted on materializing timelines at all. </p><p>Instead, we push email notifications at the time of the <code>ConnectionEvent</code> and never show the timeline in the web interface. </p><p><strong>The email is kind of like a write-time materialization</strong>. Every consumer (follower) of a producer (speaker) receives a write (an email) when the producer generates an event (publishes a talk). </p><p>I don&apos;t know that we&apos;ll be able to get away with this forever, but for a first iteration <strong>it works great</strong>. </p><p>People can follow their friends and favorite speakers. When those speakers publish a talk, their followers get a pretty email notification.</p><p>It uses the minimum effort to solve the problem of &quot;I want to know when my friends and favorite speakers publish a new talk&quot;. </p><p>The great thing is we helped Speaker Deck users make progress, but avoided the effort of having to scale a write-time materialization system for now. </p><h2 id="the-future">The Future </h2><p>I actually think this could be a pretty sweet project. Using the adapter pattern like <a href="https://github.com/jnunemaker/flipper">flipper</a>, different data stores could be used to accomplish pull (read-time), push (write-time) or some combination of the two. </p><p>I had some fun several years ago <a href="https://github.com/jnunemaker/ag">whipping something together</a>. Don&apos;t go and use this project, but if you want to see where my head was a few years ago, the remnants of redis (<a href="https://github.com/jnunemaker/ag/blob/master/lib/ag/adapters/redis_push.rb">push</a>), sequel (<a href="https://github.com/jnunemaker/ag/blob/master/lib/ag/adapters/sequel_push.rb">push</a> and <a href="https://github.com/jnunemaker/ag/blob/master/lib/ag/adapters/sequel_pull.rb">pull</a>) and active record (<a href="https://github.com/jnunemaker/ag/blob/master/lib/ag/adapters/active_record_pull.rb">pull</a>) adapters exist.</p><p>So far I&apos;ve only worked out the two ends of the spectrum &#x2013; fully read-time and fully write-time. I&apos;d love to spend some more time someday in the middle or see an example of an open source project that makes the decision of read-time or write-time per producer/consumer.</p><p>So, that is it. Real-world following and (email) notifications in Rails that is easy to scale into the hundreds of thousands of users. </p><p>Oh, and definitely go follow some people on <a href="https://speakerdeck.com/">Speaker Deck</a>. If you aren&apos;t sure who, you can <a href="https://speakerdeck.com/jnunemaker">follow me</a> or we have a <a href="https://speakerdeck.com/s/featured">featured speakers</a> page that is a good place to start.</p>]]></content:encoded></item><item><title><![CDATA[Rails: Easy Sitemaps]]></title><description><![CDATA[I've been doing some reading and learning about SEO of late. An easy thing to do is to create a sitemap and submit it to google's search console. Here is how to do that with Rails.]]></description><link>https://www.johnnunemaker.com/rails-easy-sitemaps/</link><guid isPermaLink="false">5fe0dc865afe79003938d9bc</guid><category><![CDATA[rails]]></category><category><![CDATA[seo]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Mon, 21 Dec 2020 18:09:00 GMT</pubDate><content:encoded><![CDATA[<p>A simple way to improve your SEO is letting google know what is available. Sure they crawl you automatically, but nothing is perfect. The easiest way to give them the info they need is to create sitemaps and submit them to <a href="http://search.google.com/search-console">Google&apos;s Search Console</a> tool. </p><p>The most simple way to start with sitemaps in rails is to create a sitemaps controller. To begin, it&apos;ll have two actions, but it can easily grow over time if necessary. </p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class SitemapsController &lt; ApplicationController
  def index
    respond_to do |format|
      format.xml
    end
  end

  def pages
    respond_to do |format|
      format.xml
    end
  end
end

</code></pre>
<!--kg-card-end: markdown--><blockquote><strong>Note</strong>: Make sure that if you require authentication in ApplicationController, you remove it from this controller.</blockquote><p><code>index</code> will return a sitemap of sitemaps. You can substitute the lastmod time with whatever makes sense.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby"># index.xml.builder
xml.instruct!
xml.sitemapindex xmlns: &quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot; do
  xml.sitemap do
    xml.loc sitemap_pages_url
    xml.lastmod Time.utc(2020, 12, 21, 11).strftime(&quot;%Y-%m-%dT%H:%M:%S+00:00&quot;)
  end
end
</code></pre>
<!--kg-card-end: markdown--><p><code>pages</code> will act as the individual sitemap referenced above in our sitemap of sitemaps. Here is an example of the sitemap for <a href="https://www.flippercloud.io">www.flippercloud.io</a>. </p><!--kg-card-begin: markdown--><pre><code class="language-ruby"># pages.xml.builder
xml.instruct!
xml.urlset xmlns: &quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot; do
  xml.url do
    xml.loc root_url
    xml.lastmod Time.utc(2020, 12, 21, 11).strftime(&quot;%Y-%m-%dT%H:%M:%S+00:00&quot;)
  end
  xml.url do
    xml.loc documentation_url
    xml.lastmod Time.utc(2020, 12, 21, 11).strftime(&quot;%Y-%m-%dT%H:%M:%S+00:00&quot;)
  end
  xml.url do
    xml.loc sign_up_url
    xml.lastmod Time.utc(2020, 12, 21, 11).strftime(&quot;%Y-%m-%dT%H:%M:%S+00:00&quot;)
  end
  xml.url do
    xml.loc sign_in_url
    xml.lastmod Time.utc(2020, 12, 21, 11).strftime(&quot;%Y-%m-%dT%H:%M:%S+00:00&quot;)
  end
  xml.url do
    xml.loc password_reset_url
    xml.lastmod Time.utc(2020, 12, 21, 11).strftime(&quot;%Y-%m-%dT%H:%M:%S+00:00&quot;)
  end
end

</code></pre>
<!--kg-card-end: markdown--><p>Right now, we don&apos;t have many pages, so it is quite simple. Just remember, this builder view is plain old Ruby. If your pages are in the database, you can query and iterate them and set the <code>lastmod</code> time to <code>updated_at</code> or whatever makes sense. </p><p>Down the road, if you add more sitemaps (say one for blog posts and categories) all you need to do is create another action and add the sitemap to your sitemaps index.</p><p>The last piece to make your sitemaps work is a few routes:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">get &quot;/sitemap.xml&quot;, to: &quot;sitemaps#index&quot;, as: :sitemaps
get &quot;/sitemap-pages.xml&quot;, to: &quot;sitemaps#pages&quot;, as: :sitemap_pages
</code></pre>
<!--kg-card-end: markdown--><p>We can test these routes manually in a browser, but since we want to ensure we don&apos;t accidentally break these, we&apos;ll drop some tests in. </p><!--kg-card-begin: markdown--><pre><code class="language-ruby">require &apos;test_helper&apos;

class SitemapsControllerTest &lt; ActionDispatch::IntegrationTest
  test &quot;GET index renders list of sitemaps&quot; do
    get sitemaps_path, env: {&quot;HOST&quot; =&gt; &quot;www.flippercloud.io&quot;}
    assert_response :success
    assert_select &quot;sitemapindex sitemap loc&quot;, &quot;http://www.flippercloud.io/sitemap-pages.xml&quot;
  end

  test &quot;GET show renders sitemap&quot; do
    get sitemap_pages_path, env: {&quot;HOST&quot; =&gt; &quot;www.flippercloud.io&quot;}
    assert_response :success
    assert_select &quot;urlset url loc&quot;, &quot;http://www.flippercloud.io/&quot;
    assert_select &quot;urlset url loc&quot;, &quot;http://www.flippercloud.io/docs&quot;
    assert_select &quot;urlset url loc&quot;, &quot;http://www.flippercloud.io/signup&quot;
    assert_select &quot;urlset url loc&quot;, &quot;http://www.flippercloud.io/signin&quot;
    assert_select &quot;urlset url loc&quot;, &quot;http://www.flippercloud.io/password-reset&quot;
  end
end

</code></pre>
<!--kg-card-end: markdown--><p>While these changes are deploying you can add your app as a property in Search Console. Then, once they are out in production, you can head to the Sitemaps page and submit them to google. </p><figure class="kg-card kg-image-card"><img src="https://www.johnnunemaker.com/content/images/2020/12/search-console-sitemaps.png" class="kg-image" alt loading="lazy" width="1263" height="661" srcset="https://www.johnnunemaker.com/content/images/size/w600/2020/12/search-console-sitemaps.png 600w, https://www.johnnunemaker.com/content/images/size/w1000/2020/12/search-console-sitemaps.png 1000w, https://www.johnnunemaker.com/content/images/2020/12/search-console-sitemaps.png 1263w" sizes="(min-width: 720px) 720px"></figure><p>A couple minutes of work and now Google has a much better idea of what is available on your site and when it was last updated. </p><p>Also, these can be as complex as you like. For example, <a href="https://speakerdeck.com">speakerdeck.com</a>&apos;s are quite a bit more complicated.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class SitemapsController &lt; ApplicationController
  layout nil

  def index
    start_date = Time.utc(2010, 10)
    end_date = Time.now.to_date

    @months = []
    date = start_date.beginning_of_month
    while date &lt;= end_date.beginning_of_month do
      @months &lt;&lt; date.to_date
      date = date.advance(months: 1)
    end

    respond_to do |format|
      format.xml
    end
  end

  def month
    headers[&apos;Content-Type&apos;] = &apos;application/xml&apos;
    month_start = Time.utc(params[:year], params[:month], 1).beginning_of_month
    month_end = month_start.end_of_month
    @talks = Talk.published.where(&quot;created_at BETWEEN :month_start AND :month_end&quot;, month_start: month_start, month_end: month_end).sorted.limit(50_000).includes(:owner)

    respond_to do |format|
      format.xml
    end
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>This generates a sitemap of sitemaps with a sitemap per month of all published and publicly viewable talks. The index view then iterates the months:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">xml.instruct!
xml.sitemapindex xmlns: &quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot; do
  @months.each do |month|
    xml.sitemap do
      xml.loc sitemap_url(year: month.year, month: month.month)
      xml.lastmod month
    end
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>And the individual month sitemap queries for the talks published during that time frame and iterates them to generate the urlset:</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">xml.instruct!
xml.urlset xmlns: &quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot; do
  @talks.each do |talk|
    xml.url do
      xml.loc owner_talk_url(talk.owner, talk)
      xml.lastmod talk.updated_at.strftime(&quot;%Y-%m-%dT%H:%M:%S+00:00&quot;)
    end
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>Hat tip to <a href="https://estevecastells.com">Esteve Castells</a> for the recommendation to do a sitemap per month for Speaker Deck. </p>]]></content:encoded></item><item><title><![CDATA[Rails: insert_all and upsert_all]]></title><description><![CDATA[TIL something new about Rails. You can now use insert_all and upsert_all for efficient writes. But that's not all. Read on for what "just worked" and what didn't.]]></description><link>https://www.johnnunemaker.com/rails-insert_all-and-upsert_all/</link><guid isPermaLink="false">5fda2bf45afe79003938d7ec</guid><category><![CDATA[TIL]]></category><category><![CDATA[flipper]]></category><category><![CDATA[performance]]></category><category><![CDATA[programming]]></category><category><![CDATA[rails]]></category><dc:creator><![CDATA[John Nunemaker]]></dc:creator><pubDate>Wed, 16 Dec 2020 17:06:57 GMT</pubDate><content:encoded><![CDATA[<p>I can&apos;t tell you how many times I&apos;ve either dropped to <a href="https://github.com/github/github-ds">GitHub::SQL</a> or added some external gem to do bulk writes (<a href="https://github.com/zdennis/activerecord-import">activerecord-import</a> or <a href="https://github.com/seamusabshere/upsert">upsert</a>). Often we worry about N+1&apos;s and inefficient reads, but completely forget about writes. </p><p>Why do we forget about writes? I think the main reason is because writes are so rare in comparison to reads that our apps can usually get away with being inefficient in that area.</p><h2 id="background">Background</h2><p>I&apos;ve been working on adding webhooks to <a href="https://www.flippercloud.io">Flipper Cloud</a> &#x2013; effectively switching synchronization of Cloud and your app from <strong>pull</strong> (poll for local sync) to <strong>push</strong> (webhook for local sync).</p><p>Since <a href="https://www.flippercloud.io">Cloud</a> is making a request to your app anyway, the webhook response seemed like a good time to sync up some other information &#x2013; like groups. </p><h2 id="flipper-groups">Flipper Groups</h2><p>Flipper has the concept of a <a href="https://github.com/jnunemaker/flipper/blob/9fba8fabfe22d7fd57d89e0a10ce9e5001431497/docs/Gates.md#5-group">group</a>. A group is a named dynamic block of ruby code that returns true or false. </p><!--kg-card-begin: markdown--><pre><code class="language-ruby"># register a group
Flipper.register(:admins) do |actor|
  actor.respond_to?(:admin?) &amp;&amp; actor.admin?
end

# enable admins group for stats feature
Flipper.enable_group :stats, :admins

# check if enabled stats is enabled for user
# since group is enabled for stats, this will 
# return true if person.admin? is true, else false
Flipper.enabled?(:stats, user) 
</code></pre>
<!--kg-card-end: markdown--><p><a href="https://www.flippercloud.io">Cloud</a> allows you to add groups manually:</p><figure class="kg-card kg-image-card"><img src="https://www.johnnunemaker.com/content/images/2020/12/flipper-add-group.png" class="kg-image" alt loading="lazy" width="951" height="789" srcset="https://www.johnnunemaker.com/content/images/size/w600/2020/12/flipper-add-group.png 600w, https://www.johnnunemaker.com/content/images/2020/12/flipper-add-group.png 951w" sizes="(min-width: 720px) 720px"></figure><p>But all of the groups are registered in your application, so why make people do by hand what computers can do?</p><h2 id="the-upsert-need">The Upsert Need </h2><p>Webhooks make requests to your application. Your application has the groups registered. Why not use that response body to return your group information so <a href="https://www.flippercloud.io">Cloud</a> can slurp them in? Sweet, right? </p><p>Let&apos;s say our webhook response body looks a bit like this (array of hashes so we can sync more attributes down the road if necessary):</p><!--kg-card-begin: markdown--><pre><code class="language-js">{
  &quot;groups&quot;: [
    {
      &quot;name&quot;: &quot;admins&quot;
    },
    {
      &quot;name&quot;: &quot;basic&quot;
    },
    {
      &quot;name&quot;: &quot;plus&quot;
    },
    {
      &quot;name&quot;: &quot;premium&quot;
    }
  ]
}
</code></pre>
<!--kg-card-end: markdown--><p>The next step is to upsert those groups. Any groups that have already been created can be ignored, but the rest should magically appear in the <a href="https://www.flippercloud.io">Cloud UI</a>. </p><p>Lately, I&apos;ve been reaching for <a href="https://github.com/github/github-ds">GitHub::Result</a> quite often, so this might look a bit odd to you, but I think it reads well considering the level of defensiveness required here (imagine the alternative begin/rescues that would be necessary):</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">def create_groups(response_body)
  GitHub::Result.new {
    JSON.parse(response_body)
  }.map { |data|
    if groups = data[&quot;groups&quot;]
      if groups.is_a?(Array)
        registered_groups = groups.map { |row| row.is_a?(Hash) ? row[&quot;name&quot;] : nil }.compact.uniq
        CreateGroups.call(webhook.environment, registered_groups)
      end
    end
  }.rescue { |exception|
    Rails.logger.info &quot;SyncWebhook exception: #{exception.inspect}&quot;
    Raven.capture_exception(exception)
    GitHub::Result.error(exception)
  }
end
</code></pre>
<!--kg-card-end: markdown--><p>Once the webhook request is made, the response body is passed to this method. </p><p>The goal here is for nothing to cause a failure that would prevent the creation of a WebhookResponse or incorrectly mark the webhook response as an error (for something that errored on our side of things and not in your app). </p><ol><li>The body is parsed since it is JSON. </li><li>If that succeeds, we verify the types. People can put in whatever webhook URL they want and that URL doesn&apos;t have to use our fancy, automatic middleware. </li><li>Because the response could be literally anything, we need to be careful not to assume JSON or even the structure of the JSON. </li><li>Once we have the names, we try to create any that are missing.</li><li>If anything goes wrong, we track the exception. But we don&apos;t let it cause problems with our original intent of making a webhook request and recording the result.</li></ol><h2 id="til">TIL</h2><p>Finally, we are to the <a href="https://www.johnnunemaker.com/tag/til/">TIL</a> moment. You&apos;ll notice a call to <code>CreateGroups</code> in there. I really didn&apos;t want to do multiple creates or a find and (possibly) fewer creates. </p><p>It has been a while since I&apos;ve researched upserts with Rails, so I decided to spend some time on google. Google led me to a <a href="https://blog.testdouble.com/posts/2020-04-09-speed-up-your-rails-app-with-upsert_all/">post by Justin Searls</a>, who I know and trust (I&apos;m sure he&apos;ll give me a hard time about admitting this). </p><p>I whipped a test case together and quickly had <code>CreateGroups</code> working as I wanted.</p><!--kg-card-begin: markdown--><pre><code class="language-ruby">class CreateGroups
  def self.call(environment, names)
    raise ArgumentError, &quot;environment is blank&quot; if environment.blank?

    GitHub::Result.new {
      names = Array(names).reject(&amp;:blank?).map(&amp;:to_s).uniq
      attributes = names.map { |name|
        {
          environment_id: environment.id,
          name: name,
          created_at: Time.zone.now,
          updated_at: Time.zone.now,
        }
      }

      if attributes.present?
        Group.upsert_all(attributes, unique_by: [:environment_id, :name])
      end
    }
  end
end
</code></pre>
<!--kg-card-end: markdown--><p>The key bit here is line 17 &#x2013; <code>Group.upsert_all</code>. As of Rails 6, <code><a href="https://api.rubyonrails.org/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-insert_all">insert_all</a></code> and <code><a href="https://api.rubyonrails.org/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-upsert_all">upsert_all</a></code> were added. </p><p>A couple things I learned about <code>upsert_all</code>:</p><ul><li>You need to have a unique index to work with. I already had one on <code>[:environment_id, :name]</code>. </li><li>I had to add the timestamps to the attributes hash.</li><li>I tried using <code>environment.groups.upsert_all</code>, but that did not add environment_id as I hoped it would.</li><li>When I didn&apos;t use <code>unique_by</code>, an <code>ActiveRecord::RecordNotUnique</code> or similar error was raised which I did not expect. I&apos;m fine with some groups not being created and just wanted this to create any new ones. <code>unique_by</code> solved my use case.</li></ul><p>I&apos;m a log tailer (and proud) because I always want to see what SQL is actually happening when I use fancy methods like this. For the curious, the result was:</p><!--kg-card-begin: markdown--><pre><code class="language-sql">  Group Bulk Upsert (0.4ms)  
  INSERT INTO &quot;groups&quot; (&quot;environment_id&quot;,&quot;name&quot;,&quot;created_at&quot;,&quot;updated_at&quot;) 
  VALUES (506429097, &apos;admins&apos;, &apos;2020-12-16 16:24:48.089080&apos;, &apos;2020-12-16 16:24:48.089119&apos;), (506429097, &apos;foo&apos;, &apos;2020-12-16 16:24:48.089123&apos;, &apos;2020-12-16 16:24:48.089125&apos;), (506429097, &apos;bar&apos;, &apos;2020-12-16 16:24:48.089127&apos;, &apos;2020-12-16 16:24:48.089128&apos;), (506429097, &apos;baz&apos;, &apos;2020-12-16 16:24:48.089134&apos;, &apos;2020-12-16 16:24:48.089135&apos;) 
  ON CONFLICT (&quot;environment_id&quot;,&quot;name&quot;) 
  DO UPDATE SET &quot;created_at&quot;=excluded.&quot;created_at&quot;,&quot;updated_at&quot;=excluded.&quot;updated_at&quot; 
  RETURNING &quot;id&quot;
</code></pre>
<!--kg-card-end: markdown--><p>Now, when features get enabled and disabled, <a href="https://www.flippercloud.io">Cloud</a> makes a webhook request to your app. Your app syncs feature data from Cloud and provides the groups registered. Then, Cloud ensures that those groups exist on our end for you to use in our UI. </p><figure class="kg-card kg-image-card"><img src="https://www.johnnunemaker.com/content/images/2020/12/flipper-groups-list.png" class="kg-image" alt loading="lazy" width="951" height="789" srcset="https://www.johnnunemaker.com/content/images/size/w600/2020/12/flipper-groups-list.png 600w, https://www.johnnunemaker.com/content/images/2020/12/flipper-groups-list.png 951w" sizes="(min-width: 720px) 720px"></figure><p>I&apos;m glad to see Rails has baked <code>upsert_all</code> in. Go forth and write more efficiently!</p>]]></content:encoded></item></channel></rss>
  recorded_at: Wed, 18 Aug 2021 15:34:50 GMT
recorded_with: VCR 6.0.0
